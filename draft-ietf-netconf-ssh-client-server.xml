<?xml version="1.0" encoding="UTF-8"?>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->

<rfc xmlns:xi="http://www.w3.org/2001/XInclude"
     category="std"
     consensus="true"
     submissionType="IETF"
     docName="draft-ietf-netconf-ssh-client-server-latest"
     ipr="trust200902">
  <front>
    <title abbrev="Groupings for SSH Clients and Servers">YANG Groupings for
      SSH Clients and SSH Servers</title>
    <author fullname="Kent Watsen" initials="K." surname="Watsen">
      <organization>Watsen Networks</organization>
      <address>
        <email>kent+ietf@watsen.net</email>
      </address>
    </author>
    <date/>
    <area>Operations</area>
    <workgroup>NETCONF Working Group</workgroup>
    <abstract>
      <t>This document presents seven YANG 1.1 modules. Three IETF modules,
        and four supporting IANA modules.</t>
      <t>The three IETF modules are: ietf-ssh-common, ietf-ssh-client, and
        ietf-ssh-server.  The "ietf-ssh-client" and "ietf-ssh-server" modules
        are the primary productions of this work, supporting the configuration
        and monitoring of SSH clients and servers.</t>
      <t>The four IANA modules are: iana-ssh-encryption-algs, iana-ssh-key-exchange-algs,
        iana-ssh-mac-algs, and iana-ssh-public-key-algs.  These modules each
        define YANG enumerations providing support for an IANA-maintained algorithm registry.</t>
    </abstract>
    <note title="Editorial Note (To be removed by RFC Editor)">
      <t>This draft contains placeholder values that need to be replaced
        with finalized values at the time of publication. This note summarizes
        all of the substitutions that are needed. No other RFC Editor
        instructions are specified elsewhere in this document.</t>
      <t>Artwork in this document contains shorthand references to drafts in
        progress.  Please apply the following replacements:
        <list style="symbols">
          <t><spanx style="verb">AAAA</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-crypto-types</t>
          <t><spanx style="verb">BBBB</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-trust-anchors</t>
          <t><spanx style="verb">CCCC</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-keystore</t>
          <t><spanx style="verb">DDDD</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-tcp-client-server</t>
          <t><spanx style="verb">EEEE</spanx> --&gt; the assigned RFC value for this draft</t>
        </list>
      </t>
      <t>Artwork in this document contains placeholder values for the date of
        publication of this draft. Please apply the following replacement:
        <list style="symbols">
          <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication date of this draft</t>
        </list>
      </t>
      <t>The "Relation to other RFCs" section <xref target="collective-effort"/> contains
        the text "one or more YANG modules" and, later, "modules".  This text is sourced
        from a file in a context where it is unknown how many modules a draft defines.
        The text is not wrong as is, but it may be improved by stating more directly how
        many modules are defined.</t>
      <t>The "Relation to other RFCs" section <xref target="collective-effort"/> contains
          a self-reference to this draft, along with a corresponding reference in
          the Appendix.  Please replace the self-reference in this section with "This RFC"
          (or similar) and remove the self-reference in the "Normative/Informative References"
          section, whichever it is in.</t>
        <t>Tree-diagrams in this draft may use the '&#92;' line-folding mode defined in RFC 8792.
          However, nicer-to-the-eye is when the '&#92;&#92;' line-folding mode is used.  The AD suggested
          suggested putting a request here for the RFC Editor to help convert "ugly" '&#92;' folded
          examples to use the '&#92;&#92;' folding mode.  "Help convert" may be interpreted as, identify
          what looks ugly and ask the authors to make the adjustment.</t>
      <t>The following Appendix sections are to be removed prior to publication:
        <list style="symbols">
          <li><xref target="ssh-enc-algs-model"/>.  Initial Module for the "Encryption Algorithm Names" Registry</li>
          <li><xref target="ssh-mac-algs-model"/>.  Initial Module for the "MAC Algorithm Names" Registry</li>
          <li><xref target="ssh-pubkey-algs-model"/>.  Initial Module for the "Public Key Algorithm Names" Registry</li>
          <li><xref target="ssh-keyex-algs-model"/>.  Initial Module for the "Key Exchange Method Names" Registry</li>
          <li><xref target="change-log"/>.  Change Log</li>
        </list>
      </t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
 
      <t>This document presents seven YANG 1.1 <xref target="RFC7950"/>
          modules. Three "IETF" modules and four "IANA" modules.</t>

      <t>The three IETF modules are ietf-ssh-common (<xref target="ssh-common-model"/>),
        ietf-ssh-client (<xref target="ssh-client-model"/>), and ietf-ssh-server
        (<xref target="ssh-server-model"/>).  The "ietf-ssh-client" and "ietf-ssh-server"
        modules are the primary productions of this work, supporting the configuration
          and monitoring of SSH clients and servers.</t>

      <t>The groupings defined in this document are expected to be used in
        conjunction with the groupings defined in an underlying transport-level
        module, such as the groupings defined in <xref target="I-D.ietf-netconf-tcp-client-server"/>.
        The transport-level data model enables the configuration of transport-level
        values such as a remote address, a remote port, a local address, and a
        local port.</t>

      <t>The four IANA modules are: iana-ssh-encryption-algs (<xref target="ssh-enc-algs-model"/>),
        iana-ssh-key-exchange-algs (<xref target="ssh-keyex-algs-model"/>),
        iana-ssh-mac-algs (<xref target="ssh-mac-algs-model"/>), and iana-ssh-public-key-algs
        (<xref target="ssh-pubkey-algs-model"/>).  These modules each define YANG
        enumerations providing support for an IANA-maintained algorithm registry.</t>

      <t>This document assumes that the four IANA modules exist,
        and presents a script in <xref target="iana-script"/> that IANA
        may use to generate the YANG modules.  This document does not
        publish initial versions of these four modules.  IANA publishes
        these modules.</t>

      <section title="Regarding the IETF Modules">

        <t>The three IETF modules define features and groupings to model "generic" SSH
         clients and SSH servers, where "generic" should be interpreted as "least
         common denominator" rather than "complete."  Basic SSH protocol
         (<xref target="RFC4252"/>, <xref target="RFC4253"/>, and <xref target="RFC4254"/>)
         support is afforded by these modules, leaving configuration of advance features
         (e.g., multiple channels) to augmentations made by consuming modules.</t>

        <t>It is intended that the YANG groupings will be used by applications
         needing to configure SSH client and server protocol stacks.  For
         instance, these groupings are used to help define the data model
         for NETCONF over SSH <xref target="RFC6242"/> based clients and
         servers in <xref target="I-D.ietf-netconf-netconf-client-server"/>.</t>

        <t>The ietf-ssh-client and ietf-ssh-server YANG modules each define one
        grouping, which is focused on just SSH-specific configuration, and
        specifically avoids any transport-level configuration, such as what
        ports to listen on or connect to. This affords applications the
        opportunity to define their own strategy for how the underlying TCP
        connection is established. For instance, applications supporting NETCONF
        Call Home <xref target="RFC8071"/> could use the "ssh-server-grouping"
        grouping for the SSH parts it provides, while adding data nodes for the
        TCP-level call-home configuration.</t>
  
        <t>The modules defined in this document optionally support <xref
        target="RFC6187"/> enabling X.509v3 certificate based host keys and
          public keys.</t>
      </section>

INSERT_TEXT_FROM_FILE(../common-intro-snippet.xml,150)

      <section title="Adherence to the NMDA">
        <t>This document is compliant with the Network Management Datastore
          Architecture (NMDA) <xref target="RFC8342"/>.  For instance, as
          described in <xref target="I-D.ietf-netconf-trust-anchors"/> and
          <xref target="I-D.ietf-netconf-keystore"/>, trust anchors and keys
          installed during manufacturing are expected to appear
          in &lt;operational&gt; (<xref section="5.3" target="RFC8342"/>), and &lt;system&gt;
          <xref target="I-D.ietf-netmod-system-config"/>, if implemented.</t>
      </section>

        <section title="Conventions">
          <t>Various examples in this document use "BASE64VALUE=" as a
            placeholder value for binary data that has been base64
            encoded (per <xref section="9.8" target="RFC7950"/>).  This
            placeholder value is used because real base64 encoded structures
            are often many lines long and hence distracting to the example
            being presented.</t>
        </section>

    </section>

    <section anchor="ssh-common-model" title='The "ietf-ssh-common" Module'>
      <t>The SSH common model presented in this section contains features
      and groupings common to both SSH clients and SSH servers. The
      "transport-params-grouping" grouping can be used to configure
      the list of SSH transport algorithms permitted by the SSH client
      or SSH server. The lists of permitted algorithms are in decreasing
      order of usage preference.  The algorithm that appears first in
      the client list that also appears in the server list is the one
      that is used for the SSH transport layer connection.  The ability
      to restrict the algorithms allowed is provided in this grouping
      for SSH clients and SSH servers that are capable of doing so
      and may serve to make SSH clients and SSH servers compliant
      with security policies.</t>

      <section title="Data Model Overview">

        <t>This section provides an overview of the "ietf-ssh-common" module
          in terms of its features, identities, and groupings.</t>

        <section title="Features" anchor="common-features" toc="exclude">
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-ssh-common" module:</t>
          <t>
            <figure>
              <artwork><![CDATA[
Features:
  +-- ssh-x509-certs
  +-- transport-params
  +-- asymmetric-key-pair-generation
  +-- algorithm-discovery
                ]]></artwork>
            </figure>
          </t>
          <t>The diagram above uses syntax that is similar to but not
            defined in <xref target="RFC8340"/>.</t>
          <t>Please refer to the YANG module for a description of each feature.</t>
        </section>

        <section title="Groupings" toc="exclude">
          <t>The "ietf-ssh-common" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>transport-params-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>

          <section title='The "transport-params-grouping" Grouping' anchor="transport-params-grouping">
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "transport-params-grouping" grouping:</t>
            <t>
              <figure>
               <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/tree-transport-params-grouping.no-expand.txt)
]]></artwork>
              </figure>
            </t>
            <t>Comments:</t>
            <ul>
              <li>This grouping is used by both the "ssh-client-grouping" and the
                "ssh-server-grouping" groupings defined in <xref target="ssh-client-grouping"/>
                and <xref target="ssh-server-grouping"/>, respectively.</li>
              <li>This grouping enables client and server configurations to
                specify the algorithms that are to be used when establishing
                SSH sessions.</li>
              <li>Each list is "ordered-by user".</li>
            </ul>
          </section>
        </section>

        <section title="Protocol-accessible Nodes" toc="exclude">
           <t>The following tree diagram <xref target="RFC8340"/> lists all the
             protocol-accessible nodes defined in the "ietf-ssh-common" module,
             without expanding the "grouping" statements:</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-ssh-common-tree-no-expand.txt)
]]></artwork>
              </figure>
            </t>
            <t>Comments:</t>
            <ul>
              <li>Protocol-accessible nodes are those nodes that are accessible
                when the module is "implemented", as described in <relref
                section="5.6.5" target="RFC7950"/>.</li>
              <li>The protocol-accessible nodes for the "ietf-ssh-common" module
                are limited to "supported-algorithms" container, which is constrained
                by the "algorithm-discovery" feature, and the RPC "generate-asymmetric-key-pair",
                which is constrained by the "asymmetric-key-pair-generation" feature.</li>
              <li>The "encrypted-by-grouping" grouping is discussed in
                <relref section="2.1.3.1" target="I-D.ietf-netconf-keystore"/>.</li>
              <li>The "asymmetric-key-pair-grouping" grouping is discussed in
              <relref section="2.1.4.6" target="I-D.ietf-netconf-crypto-types"/>.</li>
            </ul>
        </section>

      </section>

      <section title="Example Usage">
        <t>The following example illustrates the "transport-params-grouping'
          grouping when populated with some data.</t>
        <t><figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-common.xml)
]]></artwork>
          </figure>
        </t>

        <t>The following example illustrates operational state data indicating
          the SSH algorithms supported by the server.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-supported-algs.xml)
]]></artwork>
          </figure>
        </t>

        <t>The following example illustrates the "generate-asymmetric-key-pair" RPC.</t>
        <t>
          <figure>
            <preamble>REQUEST</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-asymmetric-key-pair-rpc.xml)
]]></artwork>
          </figure>
          <figure>
            <preamble>RESPONSE</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-asymmetric-key-pair-rpc-reply.xml)
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="ssh-common-yang-module" title="YANG Module">
        <t>This YANG module has normative references to <xref target="RFC4253"/>,
        <xref target="RFC4344"/>, <xref target="RFC4419"/>, <xref target="RFC5656"/>, 
        <xref target="RFC6187"/>, <xref target="RFC6668"/>, and <xref target="FIPS 186-6"/>.</t>
        <t>
          <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-ssh-common@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-ssh-common@YYYY-MM-DD.yang)
]]></artwork>
            <postamble>&lt;CODE ENDS&gt;</postamble>
          </figure>
        </t>
      </section>
    </section>

    <section anchor="ssh-client-model" title='The "ietf-ssh-client" Module'>

      <t>This section defines a YANG 1.1 <xref target="RFC7950"/> module called
        "ietf-ssh-client".  A high-level overview of the module is provided in
        <xref target="client-overview"/>. Examples illustrating the module's use
        are provided in <xref target="client-examples">Examples</xref>. The YANG
        module itself is defined in <xref target="client-yang-module"/>.</t>

      <section title="Data Model Overview" anchor="client-overview">

        <t>This section provides an overview of the "ietf-ssh-client" module
          in terms of its features and groupings.</t>

        <section title="Features" anchor="client-features" toc="exclude">
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-ssh-client" module:</t>
          <t>
            <figure>
              <artwork><![CDATA[
Features:
  +-- ssh-client-keepalives
  +-- client-ident-password
  +-- client-ident-publickey
  +-- client-ident-hostbased
  +-- client-ident-none
]]></artwork>
            </figure>
          </t>
          <t>The diagram above uses syntax that is similar to but not
            defined in <xref target="RFC8340"/>.</t>
          <t>Please refer to the YANG module for a description of each feature.</t>
        </section>

        <section title="Groupings" toc="exclude">
          <t>The "ietf-ssh-client" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>ssh-client-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>

          <section title='The "ssh-client-grouping" Grouping' anchor="ssh-client-grouping">
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "ssh-client-grouping" grouping:</t>
            <t>
              <figure>
               <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/tree-ssh-client-grouping.no-expand.txt)
]]></artwork>
              </figure>
            </t>
            <t>Comments:</t>
            <ul>
              <li>The "client-identity" node configures a "username" and authentication methods,
                each enabled by a "feature" statement defined in <xref target="client-features"/>.</li>
              <li>The "server-authentication" node configures trust anchors for
                authenticating the SSH server, with each option enabled by a "feature" statement.</li>
              <li>The "transport-params" node, which must be enabled by a feature, configures
                parameters for the SSH sessions established by this configuration.</li>
              <li>The "keepalives" node, which must be enabled by a feature, configures
                a "presence" container for testing the aliveness of the SSH server.  The
                aliveness-test occurs at the SSH protocol layer.</li>
              <li>For the referenced grouping statement(s):
                <ul spacing="compact">
                  <li>The "inline-or-keystore-asymmetric-key-grouping" grouping is
                    discussed in <relref section="2.1.3.4" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "inline-or-keystore-end-entity-cert-with-key-grouping" grouping is
                    discussed in <relref section="2.1.3.6" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "inline-or-truststore-public-keys-grouping" grouping is
                    discussed in <relref section="2.1.3.4" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "inline-or-truststore-certs-grouping" grouping is
                    discussed in <relref section="2.1.3.3" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "transport-params-grouping" grouping is discussed in
                  <xref target="transport-params-grouping"/> in this document.</li>
                </ul>
              </li>
            </ul>
          </section>
        </section>

        <section title="Protocol-accessible Nodes" toc="exclude">
          <t>The "ietf-ssh-client" module defines only "grouping" statements that are
            used by other modules to instantiate protocol-accessible nodes.   Thus this
            module, when implemented, does not itself define any protocol-accessible nodes.</t>
        </section>

      </section>

      <section title="Example Usage" anchor="client-examples">
        <t>This section presents two examples showing the "ssh-client-grouping"
        grouping populated with some data. These examples are effectively the same
        except the first configures the client identity using a inlined key
        while the second uses a key configured in a keystore. Both examples
        are consistent with the examples presented in
        <relref section="2.2.1" target="I-D.ietf-netconf-trust-anchors"/> and
        <relref section="2.2.1" target="I-D.ietf-netconf-keystore"/>.</t>

        <t>The following configuration example uses inline-definitions for the
          client identity and server authentication:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-client-inline.xml)
]]></artwork>
          </figure>
        </t>

        <t>The following configuration example uses central-keystore-references for the
          client identity and central-truststore-references for server authentication:
          from the keystore:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-client-keystore.xml)
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="client-yang-module" title="YANG Module">
        <t>This YANG module has normative references to <xref target="RFC4252"/>,
        <xref target="RFC4254"/>, <xref target="RFC8341"/>, <xref target="I-D.ietf-netconf-crypto-types"/>,
        <xref target="I-D.ietf-netconf-trust-anchors"/>, and <xref target="I-D.ietf-netconf-keystore"/>.</t>
        <t>
          <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-ssh-client@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-ssh-client@YYYY-MM-DD.yang)
]]></artwork>
            <postamble>&lt;CODE ENDS&gt;</postamble>
          </figure>
        </t>
      </section>
    </section>

    <section anchor="ssh-server-model" title='The "ietf-ssh-server" Module'>

      <t>This section defines a YANG 1.1 module called
        "ietf-ssh-server".  A high-level overview of the module is provided in
        <xref target="server-overview"/>. Examples illustrating the module's use
        are provided in <xref target="server-examples">Examples</xref>. The YANG
        module itself is defined in <xref target="server-yang-module"/>.</t>

      <section title="Data Model Overview" anchor="server-overview">

        <t>This section provides an overview of the "ietf-ssh-server" module
          in terms of its features and groupings.</t>

        <section title="Features" anchor="server-features" toc="exclude">
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-ssh-server" module:</t>
          <t>
            <figure>
              <artwork><![CDATA[
Features:
  +-- ssh-server-keepalives
  +-- local-users-supported
  +-- local-user-auth-publickey {local-users-supported}?
  +-- local-user-auth-password {local-users-supported}?
  +-- local-user-auth-hostbased {local-users-supported}?
  +-- local-user-auth-none {local-users-supported}?
]]></artwork>
            </figure>
          </t>
          <t>The diagram above uses syntax that is similar to but not
            defined in <xref target="RFC8340"/>.</t>
          <t>Please refer to the YANG module for a description of each feature.</t>
        </section>

        <section title="Groupings" toc="exclude">
          <t>The "ietf-ssh-server" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>ssh-server-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>

          <section title='The "ssh-server-grouping" Grouping' anchor="ssh-server-grouping">
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "ssh-server-grouping" grouping:</t>
            <t>
              <figure>
               <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/tree-ssh-server-grouping.no-expand.txt)
]]></artwork>
              </figure>
            </t>
            <t>Comments:</t>
            <ul>
              <li>The "server-identity" node configures the authentication methods the
                server can use to identify itself to clients.  The ability to use a
                certificate is enabled by a "feature".</li>
              <li>The "client-authentication" node configures trust anchors for
                authenticating the SSH client, with each option enabled by a "feature" statement.</li>
              <li>The "transport-params" node, which must be enabled by a feature, configures
                parameters for the SSH sessions established by this configuration.</li>
              <li>The "keepalives" node, which must be enabled by a feature, configures
                a "presence" container for testing the aliveness of the SSH client.  The
                aliveness-test occurs at the SSH protocol layer.</li>
              <li>For the referenced grouping statement(s):
                <ul spacing="compact">
                  <li>The "inline-or-keystore-asymmetric-key-grouping" grouping is
                    discussed in <relref section="2.1.3.4" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "inline-or-keystore-end-entity-cert-with-key-grouping" grouping is
                    discussed in <relref section="2.1.3.6" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "inline-or-truststore-public-keys-grouping" grouping is
                    discussed in <relref section="2.1.3.4" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "inline-or-truststore-certs-grouping" grouping is
                    discussed in <relref section="2.1.3.3" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "transport-params-grouping" grouping is discussed in
                  <xref target="transport-params-grouping"/> in this document.</li>
                </ul>
              </li>
            </ul>
          </section>
        </section>

        <section title="Protocol-accessible Nodes" toc="exclude">
          <t>The "ietf-ssh-server" module defines only "grouping" statements that are
            used by other modules to instantiate protocol-accessible nodes.   Thus this
            module, when implemented, does not itself define any protocol-accessible nodes.</t>
        </section>

      </section>

      <section title="Example Usage" anchor="server-examples">
        <t>This section presents two examples showing the "ssh-server-grouping"
        grouping populated with some data. These examples are effectively the same
        except the first configures the server identity using a inlined key
        while the second uses a key configured in a keystore. Both examples
        are consistent with the examples presented in
        <relref section="2.2.1" target="I-D.ietf-netconf-trust-anchors"/> and
        <relref section="2.2.1" target="I-D.ietf-netconf-keystore"/>.</t>

        <t>The following configuration example uses inline-definitions for the
          server identity and client authentication:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-server-inline.xml)
]]></artwork>
          </figure>
        </t>

        <t>The following configuration example uses central-keystore-references for the
          server identity and central-truststore-references for client authentication:
          from the keystore:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-server-keystore.xml)
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="server-yang-module" title="YANG Module">
        <t>This YANG module has references to <xref target="RFC4251"/>, <xref target="RFC4252"/>,
        <xref target="RFC4253"/>, <xref target="RFC4254"/>, <xref target="RFC7317"/>,
        <xref target="RFC8341"/>, <xref target="I-D.ietf-netconf-crypto-types"/>,
        <xref target="I-D.ietf-netconf-trust-anchors"/>, and
        <xref target="I-D.ietf-netconf-keystore"/>.</t>
        <t>
          <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-ssh-server@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-ssh-server@YYYY-MM-DD.yang)
]]></artwork>
            <postamble>&lt;CODE ENDS&gt;</postamble>
          </figure>
        </t>
      </section>
    </section>

    <section title="Security Considerations">

      <t>The three IETF YANG modules in this document define groupings and will
        not be deployed as standalone modules. Their security implications
        may be context dependent based on their use in other modules.  The
        designers of modules which import these grouping must conduct their
        own analysis of the security considerations.</t>

      <section title='Considerations for the "iana-ssh-key-exchange-algs" Module'>
        <t>This section follows the template defined in <xref section="3.7.1" target="RFC8407"/>.</t>
        <t>The "iana-ssh-key-exchange-algs" YANG module defines a data model
          that is designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>
        <t>The Network Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
            content.</t>
        <t>This YANG module defines YANG enumerations, for a public IANA-maintained
          registry.</t>
        <t>YANG enumerations are not security-sensitive, as they are statically
          defined in the publicly-accessible YANG module.  IANA MAY deprecate
          and/or obsolete enumerations over time as needed to address security
          issues found in the algorithms.</t>
        <t>This module does not define any writable-nodes, RPCs, actions,
          or notifications, and thus the security consideration for such
          is not provided here.</t>
      </section>

      <section title='Considerations for the "iana-ssh-encryption-algs" Module'>
        <t>This section follows the template defined in <xref section="3.7.1" target="RFC8407"/>.</t>
        <t>The "iana-ssh-encryption-algs" YANG module defines a data model
          that is designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>
        <t>The Network Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>
        <t>This YANG module defines YANG enumerations, for a public IANA-maintained
          registry.</t>
        <t>YANG enumerations are not security-sensitive, as they are statically
          defined in the publicly-accessible YANG module.</t>
        <t>This module does not define any writable-nodes, RPCs, actions,
          or notifications, and thus the security consideration for such
          is not provided here.</t>
      </section>

      <section title='Considerations for the "iana-ssh-mac-algs" Module'>
        <t>This section follows the template defined in <xref section="3.7.1" target="RFC8407"/>.</t>
        <t>The "iana-ssh-mac-algs" YANG module defines a data model
          that is designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>
        <t>The Network Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>
        <t>This YANG module defines YANG enumerations, for a public IANA-maintained
          registry.</t>
        <t>YANG enumerations are not security-sensitive, as they are statically
          defined in the publicly-accessible YANG module.</t>
        <t>This module does not define any writable-nodes, RPCs, actions,
          or notifications, and thus the security consideration for such
          is not provided here.</t>
      </section>

      <section title='Considerations for the "iana-ssh-public-key-algs" Module'>
        <t>This section follows the template defined in <xref section="3.7.1" target="RFC8407"/>.</t>
        <t>The "iana-ssh-public-key-algs" YANG module defines a data model
          that is designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>
        <t>The Network Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>
        <t>This YANG module defines YANG enumerations, for a public IANA-maintained
          registry.</t>
        <t>YANG enumerations are not security-sensitive, as they are statically
          defined in the publicly-accessible YANG module.</t>
        <t>This module does not define any writable-nodes, RPCs, actions,
          or notifications, and thus the security consideration for such
          is not provided here.</t>
      </section>

      <section title='Considerations for the "ietf-ssh-common" YANG Module'>
        <t>This section follows the template defined in <xref section="3.7.1" target="RFC8407"/>.</t>

        <t>The "ietf-ssh-common" YANG module defines "grouping" statements
          that are designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>

        <t>The Network Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>

        <t>Please be aware that this YANG module uses groupings from
          other YANG modules that define nodes that may be considered
          sensitive or vulnerable in network environments.  Please
          review the Security Considerations for dependent YANG modules
          for information as to which nodes may be considered sensitive
          or vulnerable in network environments.</t>

        <t>None of the readable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-all" extension has not been set for
          any data nodes defined in this module.</t>

        <t>None of the writable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-write" extension has not been set for
          any data nodes defined in this module.</t>

        <t>This module defines the RPC "generate-asymmetric-key-pair" that may, if
          the "ct:cleartext-private-keys" feature is enabled, and the client
          requests it, return the private clear in cleartext form.  It is
          NOT RECOMMENDED for private keys to pass the server's security
          perimeter.</t>

        <t>This module does not define any actions or notifications,
          and thus the security consideration for such is not provided here.</t>

      </section>

      <section title='Considerations for the "ietf-ssh-client" YANG Module'>
        <t>This section follows the template defined in <xref section="3.7.1" target="RFC8407"/>.</t>

        <t>The "ietf-ssh-client" YANG module defines "grouping" statements
          that are designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>

        <t>The Network Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>

        <t>Please be aware that this YANG module uses groupings from
          other YANG modules that define nodes that may be considered
          sensitive or vulnerable in network environments.  Please
          review the Security Considerations for dependent YANG modules
          for information as to which nodes may be considered sensitive
          or vulnerable in network environments.</t>

        <t>One readable data node defined in this YANG module may be considered
          sensitive or vulnerable in some network environments. This
          node is as follows:
          <list style="symbols">
            <t>The "client-identity/password" node:
              <ul empty="true">
                <li>The cleartext "password" node defined in the "ssh-client-grouping"
                  grouping is additionally sensitive to read operations such that,
                  in normal use cases, it should never be returned to a client.
                  For this reason, the NACM extension "default-deny-all" has been
                  applied to it.</li>
              </ul>
            </t>
          </list>
        </t>

        <t>All the writable data nodes defined by this module may be
          considered sensitive or vulnerable in some network environments.
          For instance, any modification to a key or reference to a key
          may dramatically alter the implemented security policy.  For
          this reason, the NACM extension "default-deny-write" has been
          set for all data nodes defined in this module.</t>

        <t>This module does not define any RPCs, actions, or notifications,
          and thus the security consideration for such is not provided here.</t>
      </section>

      <section title='Considerations for the "ietf-ssh-server" YANG Module'>
        <t>This section follows the template defined in <xref section="3.7.1" target="RFC8407"/>.</t>

        <t>The "ietf-ssh-server" YANG module defines "grouping" statements
          that are designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>

        <t>The Network Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>

        <t>Please be aware that this YANG module uses groupings from
          other YANG modules that define nodes that may be considered
          sensitive or vulnerable in network environments.  Please
          review the Security Considerations for dependent YANG modules
          for information as to which nodes may be considered sensitive
          or vulnerable in network environments.</t>

        <t>None of the readable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-all" extension has not been set for
          any data nodes defined in this module.</t>

        <t>All the writable data nodes defined by this module may be
          considered sensitive or vulnerable in some network environments.
          For instance, the addition or removal of references to keys,
          certificates, trusted anchors, etc., or even the modification
          of transport or keepalive parameters can dramatically alter
          the implemented security policy.  For this reason, the NACM
          extension "default-deny-write" has been set for all data nodes
          defined in this module.</t>

        <t>This module does not define any RPCs, actions, or notifications,
          and thus the security consideration for such is not provided here.</t>
      </section>
    </section>

    <section title="IANA Considerations">

      <section title='The "IETF XML" Registry'>
        <t>This document registers seven URIs in the "ns" subregistry of the
        IETF XML Registry <xref target="RFC3688"/>. Following the format in
        <xref target="RFC3688"/>, the following registrations are
        requested:</t>

        <t><figure>
            <artwork>
URI: urn:ietf:params:xml:ns:yang:iana-ssh-key-exchange-algs
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.

URI: urn:ietf:params:xml:ns:yang:iana-ssh-encryption-algs
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.

URI: urn:ietf:params:xml:ns:yang:iana-ssh-mac-algs
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.

URI: urn:ietf:params:xml:ns:yang:iana-ssh-public-key-algs
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.

URI: urn:ietf:params:xml:ns:yang:ietf-ssh-common
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.

URI: urn:ietf:params:xml:ns:yang:ietf-ssh-client
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.

URI: urn:ietf:params:xml:ns:yang:ietf-ssh-server
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.
</artwork>
          </figure></t>
      </section>

      <section title='The "YANG Module Names" Registry'>
        <t>This document registers seven YANG modules in the YANG Module Names
        registry <xref target="RFC6020"/>. Following the format in <xref
        target="RFC6020"/>, the following registrations are requested:</t>

        <t><figure>
            <artwork>
name:         iana-ssh-key-exchange-algs
namespace:    urn:ietf:params:xml:ns:yang:iana-ssh-key-exchange-algs
prefix:       sshkea
reference:    RFC EEEE

name:         iana-ssh-encryption-algs
namespace:    urn:ietf:params:xml:ns:yang:iana-ssh-encryption-algs
prefix:       sshea
reference:    RFC EEEE

name:         iana-ssh-mac-algs
namespace:    urn:ietf:params:xml:ns:yang:iana-ssh-mac-algs
prefix:       sshma
reference:    RFC EEEE

name:         iana-ssh-public-key-algs
namespace:    urn:ietf:params:xml:ns:yang:iana-ssh-public-key-algs
prefix:       sshpka
reference:    RFC EEEE

name:         ietf-ssh-common
namespace:    urn:ietf:params:xml:ns:yang:ietf-ssh-common
prefix:       sshcmn
reference:    RFC EEEE

name:         ietf-ssh-client
namespace:    urn:ietf:params:xml:ns:yang:ietf-ssh-client
prefix:       sshc
reference:    RFC EEEE

name:         ietf-ssh-server
namespace:    urn:ietf:params:xml:ns:yang:ietf-ssh-server
prefix:       sshs
reference:    RFC EEEE
</artwork>
          </figure></t>
      </section>

      <section title='Considerations for the "iana-ssh-encryption-algs" Module'>
        <t>This section follows the template defined in <xref section="4.30.3.1"
          target="I-D.ietf-netmod-rfc8407bis"/>.</t>
        <t>This document presents a script (see <xref target="iana-script"/>) for
          IANA to use to generate the IANA-maintained "iana-ssh-encryption-algs" YANG module.
          The most recent version of the YANG module is available from the "YANG Parameters"
          registry <xref target="IANA-YANG-PARAMETERS"/>.</t>
        <t>IANA is requested to add the following note to the registry:</t>
        <blockquote>New values must not be directly added to the "iana-ssh-encryption-algs"
          YANG module.  They must instead be added to the "Encryption Algorithm Names" sub-registry of the
          "Secure Shell (SSH) Protocol Parameters" registry <xref target="IANA-ENC-ALGS"/>.</blockquote>
        <t>When a value is added to the "Encryption Algorithm Names" sub-registry, a new "enum"
          statement must be added to the "iana-ssh-encryption-algs" YANG module.  The
          "enum" statement, and sub-statements thereof, should be defined as follows:</t>
        <dl newline="true">
          <dt>enum</dt>
          <dd>Replicates a name from the registry.</dd>
          <dt>value</dt>
          <dd>Contains the decimal value of the IANA-assigned value.</dd>
          <dt>status</dt>
          <dd>Include only if a registration has been deprecated or obsoleted.
            An IANA "Note" containing the word "HISTORIC" maps to YANG status "obsolete".
            Since the registry is unable to express a "SHOULD NOT" recommendation,
            there is no mapping to YANG status "deprecated".</dd>
          <dt>description</dt>
          <dd>Contains "Enumeration for the 'foo-bar' algorithm.", where "foo-bar" is
            a placeholder for the algorithm's name (e.g., "3des-cbc").</dd>
          <dt>reference</dt>
          <dd>Replicates the reference(s) from the registry with the title of the
            document(s) added.</dd>
        </dl>
        <t>Unassigned or reserved values are not present in the module.</t>
        <t>When the "iana-ssh-encryption-algs" YANG module is updated, a new "revision" statement
          with a unique revision date must be added in front of the existing revision statements.
          The "revision" must have a "description" statement explaining why the 
          the update occurred, and must have a "reference" substatement that points to the 
          document defining the registry update that resulted in this change. For instance:</t>
            <artwork>
revision 2024-02-02 {
    description
      "This update reflect the update made to the underlying
       Foo Bar registry per RFC XXXX.";
  reference
      "RFC XXXX: Extend the Foo Bars Registry
                 to Support Something Important";
}</artwork>
        <t>IANA is requested to add the following note to the "Encryption Algorithm Names"
          sub-registry.</t>
        <blockquote>When this registry is modified, the YANG module "iana-ssh-encryption-algs"
          <xref target="IANA-YANG-PARAMETERS"/> must be updated as defined in RFC EEEE.</blockquote>
      </section>

      <section title='Considerations for the "iana-ssh-mac-algs" Module'>
        <t>This section follows the template defined in <xref section="4.30.3.1"
          target="I-D.ietf-netmod-rfc8407bis"/>.</t>
        <t>This document presents a script (see <xref target="iana-script"/>) for
          IANA to use to generate the IANA-maintained "iana-ssh-mac-algs" YANG module.
          The most recent version of the YANG module is available from the "YANG Parameters"
          registry <xref target="IANA-YANG-PARAMETERS"/>.</t>
        <t>IANA is requested to add the following note to the registry:</t>
        <blockquote>New values must not be directly added to the "iana-ssh-mac-algs"
          YANG module.  They must instead be added to the "MAC Algorithm Names" sub-registry of the
          "Secure Shell (SSH) Protocol Parameters" registry <xref target="IANA-MAC-ALGS"/>.</blockquote>
        <t>When a value is added to the "MAC Algorithm Names" sub-registry, a new "enum"
          statement must be added to the "iana-ssh-mac-algs" YANG module.  The
          "enum" statement, and sub-statements thereof, should be defined as follows:</t>
        <dl newline="true">
          <dt>enum</dt>
          <dd>Replicates a name from the registry.</dd>
          <dt>value</dt>
          <dd>Contains the decimal value of the IANA-assigned value.</dd>
          <dt>status</dt>
          <dd>Include only if a registration has been deprecated or obsoleted.</dd>
          <dt>description</dt>
          <dd>Contains "Enumeration for the 'foo-bar' algorithm.", where "foo-bar" is
            a placeholder for the algorithm's name (e.g., "3des-cbc").</dd>
          <dt>reference</dt>
          <dd>Replicates the reference(s) from the registry with the title of the
            document(s) added.</dd>
        </dl>
        <t>Unassigned or reserved values are not present in the module.</t>
        <t>When the "iana-ssh-mac-algs" YANG module is updated, a new "revision" statement
          with a unique revision date must be added in front of the existing revision statements.
          The "revision" must have a "description" statement explaining why the 
          the update occurred, and must have a "reference" substatement that points to the 
          document defining the registry update that resulted in this change. For instance:</t>
            <artwork>
revision 2024-02-02 {
    description
      "This update reflect the update made to the underlying
       Foo Bar registry per RFC XXXX.";
  reference
      "RFC XXXX: Extend the Foo Bars Registry
                 to Support Something Important";
}</artwork>
        <t>IANA is requested to add the following note to the "MAC Algorithm Names" sub-registry.</t>
        <blockquote>When this registry is modified, the YANG module "iana-ssh-mac-algs"
          <xref target="IANA-YANG-PARAMETERS"/> must be updated as defined in RFC EEEE.</blockquote>
      </section>

      <section title='Considerations for the "iana-ssh-public-key-algs" Module'>
        <t>This section follows the template defined in <xref section="4.30.3.1"
          target="I-D.ietf-netmod-rfc8407bis"/>.</t>
        <t>This document presents a script (see <xref target="iana-script"/>) for
          IANA to use to generate the IANA-maintained "iana-ssh-public-key-algs" YANG module.
          The most recent version of the YANG module is available from the "YANG Parameters"
          registry <xref target="IANA-YANG-PARAMETERS"/>.</t>
        <t>IANA is requested to add the following note to the registry:</t>
        <blockquote>New values must not be directly added to the "iana-ssh-public-key-algs"
          YANG module.  They must instead be added to the "Public Key Algorithm Names" sub-registry of the
          "Secure Shell (SSH) Protocol Parameters" registry <xref target="IANA-PUBKEY-ALGS"/>.</blockquote>
        <t>When a value is added to the "Public Key Algorithm Names" sub-registry, a new "enum"
          statement must be added to the "iana-ssh-public-key-algs" YANG module.  The
          "enum" statement, and sub-statements thereof, should be defined as follows:</t>
        <dl newline="true">
          <dt>enum</dt>
          <dd>Replicates a name from the registry.</dd>
          <dt>value</dt>
          <dd>Contains the decimal value of the IANA-assigned value.</dd>
          <dt>status</dt>
          <dd>Include only if a registration has been deprecated or obsoleted.</dd>
          <dt>description</dt>
          <dd>Contains "Enumeration for the 'foo-bar' algorithm.", where "foo-bar" is
            a placeholder for the algorithm's name (e.g., "3des-cbc").</dd>
          <dt>reference</dt>
          <dd>Replicates the reference(s) from the registry with the title of the
            document(s) added.</dd>
        </dl>
        <t>In the case that the algorithm name ends with "-*", the familiy of enumerations 
          must be added.  The familiy of enum algorithm names are generated by replacing
          the '*' character with these strings: "nistp256", "nistp384", "nistp521",
          "1.3.132.0.1", "1.2.840.10045.3.1.1", "1.3.132.0.33", "1.3.132.0.26",
          "1.3.132.0.27", "1.3.132.0.16", "1.3.132.0.36", "1.3.132.0.37", and "1.3.132.0.38".</t>
        <t>Unassigned or reserved values are not present in the module.</t>
        <t>When the "iana-ssh-public-key-algs" YANG module is updated, a new "revision" statement
          with a unique revision date must be added in front of the existing revision statements.
          The "revision" must have a "description" statement explaining why the 
          the update occurred, and must have a "reference" substatement that points to the 
          document defining the registry update that resulted in this change. For instance:</t>
            <artwork>
revision 2024-02-02 {
    description
      "This update reflect the update made to the underlying
       Foo Bar registry per RFC XXXX.";
  reference
      "RFC XXXX: Extend the Foo Bars Registry
                 to Support Something Important";
}</artwork>
        <t>IANA is requested to add the following note to the "Public Key Algorithm Names" sub-registry.</t>
        <blockquote>When this registry is modified, the YANG module "iana-ssh-public-key-algs"
          <xref target="IANA-YANG-PARAMETERS"/> must be updated as defined in RFC EEEE.</blockquote>
      </section>

      <section title='Considerations for the "iana-ssh-key-exchange-algs" Module'>
        <t>This section follows the template defined in <xref section="4.30.3.1"
          target="I-D.ietf-netmod-rfc8407bis"/>.</t>
        <t>This document presents a script (see <xref target="iana-script"/>) for
          IANA to use to generate the IANA-maintained "iana-ssh-key-exchange-algs" YANG module.
          The most recent version of the YANG module is available from the "YANG Parameters"
          registry <xref target="IANA-YANG-PARAMETERS"/>.</t>
        <t>IANA is requested to add the following note to the registry:</t>
        <blockquote>New values must not be directly added to the "iana-ssh-key-exchange-algs"
          YANG module.  They must instead be added to the "Key Exchange Method Names" sub-registry of the
          "Secure Shell (SSH) Protocol Parameters" registry <xref target="IANA-KEYEX-ALGS"/>.</blockquote>
        <t>When a value is added to the "Key Exchange Method Names" sub-registry, a new
          "enum" statement must be added to the "iana-ssh-key-exchange-algs" YANG module.
          The "enum" statement, and sub-statements thereof, should be defined as follows:</t>
        <dl newline="true">
          <dt>enum</dt>
          <dd>Replicates a name from the registry.</dd>
          <dt>value</dt>
          <dd>Contains the decimal value of the IANA-assigned value.</dd>
          <dt>status</dt>
          <dd>Include only if a registration has been deprecated or obsoleted. 
             An IANA "OK to Implement" containing "SHOULD NOT" maps to YANG status "deprecated".
             An IANA "OK to Implement" containing "MUST NOT" maps to YANG status "obsolete".</dd>
          <dt>description</dt>
          <dd>Contains "Enumeration for the 'foo-bar' algorithm.", where "foo-bar" is
            a placeholder for the algorithm's name (e.g., "3des-cbc").</dd>
          <dt>reference</dt>
          <dd>Replicates the reference(s) from the registry with the title of the
            document(s) added.</dd>
        </dl>
        <t>In the case that the algorithm name ends with "-*", the familiy of enumerations 
          must be added.  The familiy of enum algorithm names are generated by replacing
          the '*' character with these strings: "nistp256", "nistp384", "nistp521",
          "1.3.132.0.1", "1.2.840.10045.3.1.1", "1.3.132.0.33", "1.3.132.0.26",
          "1.3.132.0.27", "1.3.132.0.16", "1.3.132.0.36", "1.3.132.0.37", and "1.3.132.0.38".</t>
        <t>Unassigned or reserved values are not present in the module.</t>
        <t>When the "iana-ssh-key-exchange-algs" YANG module is updated, a new "revision" statement
          with a unique revision date must be added in front of the existing revision statements.
          The "revision" must have a "description" statement explaining why the 
          the update occurred, and must have a "reference" substatement that points to the 
          document defining the registry update that resulted in this change. For instance:</t>
            <artwork>
revision 2024-02-02 {
    description
      "This update reflect the update made to the underlying
       Foo Bar registry per RFC XXXX.";
  reference
      "RFC XXXX: Extend the Foo Bars Registry
                 to Support Something Important";
}</artwork>
        <t>IANA is requested to add the following note to the "Key Exchange Method Names" sub-registry.</t>
        <blockquote>When this registry is modified, the YANG module "iana-ssh-key-exchange-algs"
          <xref target="IANA-YANG-PARAMETERS"/> must be updated as defined in RFC EEEE.</blockquote>
      </section>

    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.4251.xml"?>
      <?rfc include="reference.RFC.4252.xml"?>
      <?rfc include="reference.RFC.4253.xml"?>
      <?rfc include="reference.RFC.4254.xml"?>
      <?rfc include="reference.RFC.4344.xml"?>
      <?rfc include="reference.RFC.4419.xml"?>
      <?rfc include="reference.RFC.4432.xml"?>
      <?rfc include="reference.RFC.4462.xml"?>
      <?rfc include="reference.RFC.5647.xml"?>
      <?rfc include="reference.RFC.5656.xml"?>
      <?rfc include="reference.RFC.6020.xml"?>
      <?rfc include="reference.RFC.6187.xml"?>
      <?rfc include="reference.RFC.6668.xml"?>
      <?rfc include="reference.RFC.7317.xml"?>
      <?rfc include="reference.RFC.7950.xml"?>
      <?rfc include="reference.RFC.8174.xml"?>
      <?rfc include="reference.RFC.8268.xml"?>
      <?rfc include="reference.RFC.8308.xml"?>
      <?rfc include="reference.RFC.8332.xml"?>
      <?rfc include="reference.RFC.8341.xml"?>
      <?rfc include="reference.RFC.8709.xml"?>
      <?rfc include="reference.RFC.8731.xml"?>
      <?rfc include="reference.RFC.8732.xml"?>
      <?rfc include="reference.RFC.8758.xml"?>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-crypto-types.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-trust-anchors.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-keystore.xml"/>
    </references>

    <references title="Informative References">
      <!--<reference anchor='FIPS180-4' target="http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf">
          <front>
            <title>Secure Hash Standard (SHS)</title>
            <author fullname='National Institute of Standards and Technology'/>
            <date year='2012' month='March'/>
          </front>
          <seriesInfo name="FIPS PUB" value="180-4"/>
        </reference>-->
      <?rfc include="reference.RFC.3688.xml"?>
      <?rfc include="reference.RFC.6241.xml"?>
      <?rfc include="reference.RFC.6242.xml"?>
      <?rfc include="reference.RFC.8040.xml"?>
      <?rfc include="reference.RFC.8071.xml"?>
      <?rfc include="reference.RFC.8340.xml"?>
      <?rfc include="reference.RFC.8342.xml"?>
      <?rfc include="reference.RFC.8407.xml"?>

      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-tcp-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-ssh-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-tls-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-http-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-netconf-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-restconf-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netmod-system-config.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netmod-rfc8407bis.xml"/>

      <reference anchor="FIPS 186-6" target="https://csrc.nist.gov/publications/detail/fips/186/5/draft">
        <front>
          <title>Digital Signature Standard (DSS)</title>
          <author fullname="The National Institute for Science and Technology (NIST)"/>
        </front>
      </reference>

      <!--
      <reference anchor="OPENSSH" target="http://www.openssh.com">
        <front>
          <title>OpenSSH</title>
          <author fullname="The OpenBSD Project"/>
        </front>
      </reference>
      -->

      <reference anchor="IANA-KEYEX-ALGS" target="https://www.iana.org/assignments/ssh-parameters/ssh-parameters.xhtml#ssh-parameters-16">
        <front>
          <title>IANA "Key Exchange Method Names" Sub-registry of the "Secure Shell (SSH) Protocol Parameters" Registry</title>
          <author fullname="Internet Assigned Numbers Authority (IANA)"/>
        </front>
      </reference>
      <reference anchor="IANA-ENC-ALGS" target="https://www.iana.org/assignments/ssh-parameters/ssh-parameters.xhtml#ssh-parameters-17">
        <front>
          <title>IANA "Encryption Algorithm Names" Sub-registry of the "Secure Shell (SSH) Protocol Parameters" Registry</title>
          <author fullname="Internet Assigned Numbers Authority (IANA)"/>
        </front>
      </reference>
      <reference anchor="IANA-MAC-ALGS" target="https://www.iana.org/assignments/ssh-parameters/ssh-parameters.xhtml#ssh-parameters-18">
        <front>
          <title>IANA "MAC Algorithm Names" Sub-registry of the "Secure Shell (SSH) Protocol Parameters" Registry</title>
          <author fullname="Internet Assigned Numbers Authority (IANA)"/>
        </front>
      </reference>
      <reference anchor="IANA-PUBKEY-ALGS" target="https://www.iana.org/assignments/ssh-parameters/ssh-parameters.xhtml#ssh-parameters-19">
        <front>
          <title>IANA "Public Key Algorithm Names" Sub-registry of the "Secure Shell (SSH) Protocol Parameters" Registry</title>
          <author fullname="Internet Assigned Numbers Authority (IANA)"/>
        </front>
      </reference>
      <reference anchor="IANA-YANG-PARAMETERS" target="https://www.iana.org/assignments/yang-parameters">
        <front>
          <title>YANG Parameters</title>
          <author>
            <organization/>
          </author>
          <date>n.d.</date>
        </front>
      </reference>
    </references>

    <section title='Script to Generate IANA-Maintained YANG Modules' anchor="iana-script">
      <t>This section is not Normative.</t>
      <t>The Python <eref target="https://www.python.org"/> script contained in this
        section will create the four IANA-maintained modules described in this document.</t>
      <t>Run the script using the command `python gen-yang-modules.py`, to produce four
        YANG module files in the current directory.</t>
      <t>Be aware that the script does not attempt to copy the "revision" statements
        from the previous/current YANG module.  Copying the revision statements must
        be done manually.</t>
      <t>
        <figure>
          <sourcecode type="python" markers="true"><![CDATA[
INSERT_TEXT_FROM_FILE(gen-yang-modules.py)
]]></sourcecode>
        </figure>
      </t>

      <section title='Initial Module for the "Encryption Algorithm Names" Registry' anchor="ssh-enc-algs-model">
          <t>Following are the complete contents to the initial IANA-maintained YANG module.
            Please note that the date "YYYY-MM-DD" reflects the day on which the extraction
            occurred.  Applications SHOULD use the IANA-maintained module, not the module
            defined in this draft.</t>
          <t>This YANG module has normative references to [FIPS 46-3], <xref target="RFC4253"/>,
            <xref target="RFC4344"/>, <xref target="RFC5647"/>, and <xref target="RFC8758"/>.</t>
          <t>
            <figure>
              <preamble>&lt;CODE BEGINS&gt; file "iana-ssh-encryption-algs@YYYY-MM-DD.yang"</preamble>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(iana-ssh-encryption-algs@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
      </section>

      <section title='Initial Module for the "MAC Algorithm Names" Registry' anchor="ssh-mac-algs-model">
          <t>Following are the complete contents to the initial IANA-maintained YANG module.
            Please note that the date "YYYY-MM-DD" reflects the day on which the extraction
            occurred.  Applications SHOULD use the IANA-maintained module, not the module 
            defined in this draft.</t>
          <t>This YANG module has normative references <xref target="RFC4253"/>,
            <xref target="RFC5647"/>, and <xref target="RFC6668"/>.</t>
          <t>
            <figure>
              <preamble>&lt;CODE BEGINS&gt; file "iana-ssh-mac-algs@YYYY-MM-DD.yang"</preamble>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(iana-ssh-mac-algs@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
      </section>

      <section title='Initial Module for the "Public Key Algorithm Names" Registry' anchor="ssh-pubkey-algs-model">
          <t>Following are the complete contents to the initial IANA-maintained YANG module.
            Please note that the date "YYYY-MM-DD" reflects the day on which the extraction
            occurred.  Applications SHOULD use the IANA-maintained module, not the module 
            defined in this draft.</t>
          <t>This YANG module has normative references <xref target="RFC4253"/>,
            <xref target="RFC4462"/>, <xref target="RFC5656"/>, <xref target="RFC6187"/>,
            <xref target="RFC8332"/>, and <xref target="RFC8709"/>.</t>
          <t>
            <figure>
              <preamble>&lt;CODE BEGINS&gt; file "iana-ssh-public-key-algs@YYYY-MM-DD.yang"</preamble>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(iana-ssh-public-key-algs@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
      </section>

      <section title='Initial Module for the "Key Exchange Method Names" Registry' anchor="ssh-keyex-algs-model">
          <t>Following are the complete contents to the initial IANA-maintained YANG module.
            Please note that the date "YYYY-MM-DD" reflects the day on which the extraction
            occurred.  Applications SHOULD use the IANA-maintained module, not the module 
            defined in this draft.</t>
          <t>This YANG module has normative references to <xref target="RFC4419"/>,
            <xref target="RFC4432"/>, <xref target="RFC5656"/>, <xref target="RFC8268"/>,
            <xref target="RFC8308"/>, <xref target="RFC8731"/>, <xref target="RFC8732"/>.</t>
          <t>
            <figure>
              <preamble>&lt;CODE BEGINS&gt; file "iana-ssh-key-exchange-algs@YYYY-MM-DD.yang"</preamble>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(iana-ssh-key-exchange-algs@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
        </section>
    </section>

    <section title="Change Log" anchor="change-log">
      <section title="00 to 01">
        <t>
          <list style="symbols">
            <t>Noted that '0.0.0.0' and '::' might have special meanings.</t>
            <t>Renamed "keychain" to "keystore".</t>
          </list>
        </t>
      </section>
      <section title="01 to 02">
        <t>
          <list style="symbols">
            <t>Removed the groupings 'listening-ssh-client-grouping' and
            'listening-ssh-server-grouping'. Now modules only contain the
            transport-independent groupings.</t>
            <t>Simplified the "client-auth" part in the ietf-ssh-client
            module. It now inlines what it used to point to keystore for.</t>
            <t>Added cipher suites for various algorithms into new
            'ietf-ssh-common' module.</t>
          </list>
        </t>
      </section>
      <section title="02 to 03">
        <t>
          <list style="symbols">
            <t>Removed 'RESTRICTED' enum from 'password' leaf type.</t>
            <t>Added a 'must' statement to container 'server-auth' asserting
            that at least one of the various auth mechanisms must be
            specified.</t>
            <t>Fixed description statement for leaf 'trusted-ca-certs'.</t>
          </list>
        </t>
      </section>
      <section title="03 to 04">
        <t>
          <list style="symbols">
            <t>Change title to "YANG Groupings for SSH Clients and SSH
            Servers"</t>
            <t>Added reference to RFC 6668</t>
            <t>Added RFC 8174 to Requirements Language Section.</t>
            <t>Enhanced description statement for ietf-ssh-server's
            "trusted-ca-certs" leaf.</t>
            <t>Added mandatory true to ietf-ssh-client's "client-auth"
            'choice' statement.</t>
            <t>Changed the YANG prefix for module ietf-ssh-common from
            'sshcom' to 'sshcmn'.</t>
            <t>Removed the compression algorithms as they are not commonly
            configurable in vendors' implementations.</t>
            <t>Updating descriptions in transport-params-grouping and the
            servers's usage of it.</t>
            <t>Now tree diagrams reference ietf-netmod-yang-tree-diagrams</t>
            <t>Updated YANG to use typedefs around leafrefs to common keystore
            paths</t>
            <t>Now inlines key and certificates (no longer a leafref to
            keystore)</t>
          </list>
        </t>
      </section>
      <section title="04 to 05">
        <t>
          <list style="symbols">
            <t>Merged changes from co-author.</t>
          </list>
        </t>
      </section>
      <section title="05 to 06">
        <t>
          <list style="symbols">
            <t>Updated to use trust anchors from trust-anchors draft (was
            keystore draft)</t>
            <t>Now uses new keystore grouping enabling asymmetric key to be
            either locally defined or a reference to the keystore.</t>
          </list>
        </t>
      </section>
      <section title="06 to 07">
        <t>
          <list style="symbols">
            <t>factored the ssh-[client|server]-groupings into more reusable
            groupings.</t>
            <t>added if-feature statements for the new "ssh-host-keys" and
            "x509-certificates" features defined in
            draft-ietf-netconf-trust-anchors.</t>
          </list>
        </t>
      </section>
      <section title="07 to 08">
        <t>
          <list style="symbols">
            <t>Added a number of compatibility matrices to Section 5 (thanks Frank!)</t>
            <t>Clarified that any configured "host-key-alg" values need to be
               compatible with the configured private key.</t>
          </list>
        </t>
      </section>
      <section title="08 to 09">
        <t>
          <list style="symbols">
            <t>Updated examples to reflect update to groupings defined in the keystore -09 draft.</t>
            <t>Add SSH keepalives features and groupings.</t>
            <t>Prefixed top-level SSH grouping nodes with 'ssh-' and support mashups.</t>
            <t>Updated copyright date, boilerplate template, affiliation, and folding algorithm.</t>
          </list>
        </t>
      </section>
      <section title="09 to 10">
        <t>
          <list style="symbols">
            <t>Reformatted the YANG modules.</t>
          </list>
        </t>
      </section>
      <section title="10 to 11">
        <t>
          <list style="symbols">
            <t>Reformatted lines causing folding to occur.</t>
          </list>
        </t>
      </section>
      <section title="11 to 12">
        <t>
          <list style="symbols">
            <t>Collapsed all the inner groupings into the top-level grouping.</t>
            <t>Added a top-level "demux container" inside the top-level grouping.</t>
            <t>Added NACM statements and updated the Security Considerations section.</t>
            <t>Added "presence" statements on the "keepalive" containers, as was
              needed to address a validation error that appeared after adding the
              "must" statements into the NETCONF/RESTCONF client/server modules.</t>
            <t>Updated the boilerplate text in module-level "description" statement
              to match copyeditor convention.</t>
          </list>
        </t>
      </section>
      <section title="12 to 13">
        <t>
          <list style="symbols">
            <t>Removed the "demux containers", floating the
              nacm:default-deny-write to each descendant node, and
              adding a note to model designers regarding the potential
              need to add their own demux containers.</t>
            <t>Fixed a couple references (section 2 --> section 3)</t>
            <t>In the server model, replaced &lt;client-cert-auth&gt;
              with &lt;client-authentication&gt; and introduced
              'inline-or-external' choice.</t>
          </list>
        </t>
      </section>
      <section title="13 to 14">
        <t>
          <list style="symbols">
            <t>Updated to reflect changes in trust-anchors drafts
              (e.g., s/trust-anchors/truststore/g + s/pinned.//)</t>
          </list>
        </t>
      </section>
      <section title="14 to 15">
        <t>
          <list style="symbols">
            <t>Updated examples to reflect ietf-crypto-types change
              (e.g., identities --&gt; enumerations)</t>
            <t>Updated "server-authentication" and "client-authentication" nodes from
              being a leaf of type "ts:host-keys-ref" or "ts:certificates-ref" to a
              container that uses "ts:inline-or-truststore-host-keys-grouping" or
              "ts:inline-or-truststore-certs-grouping".</t>
          </list>
        </t>
      </section>
      <section title="15 to 16">
        <t>
          <list style="symbols">
            <t>Removed unnecessary if-feature statements in the -client and -server modules.</t>
            <t>Cleaned up some description statements in the -client and -server modules.</t>
            <t>Fixed a canonical ordering issue in ietf-ssh-common detected by new pyang.</t>
          </list>
        </t>
      </section>
      <section title="16 to 17">
        <t>
          <list style="symbols">
            <t>Removed choice inline-or-external by removing the 'external' case and flattening
              the 'local' case and adding a "local-users-supported" feature.</t>
            <t>Updated examples to include the "*-key-format" nodes.</t>
            <t>Augmented-in "must" expressions ensuring that locally-defined public-key-format
              are "ct:ssh-public-key-format" (must expr for ref'ed keys are TBD).</t>
          </list>
        </t>
      </section>
      <section title="17 to 18">
        <t>
          <list style="symbols">
            <t>Removed leaf-list 'other' from ietf-ssh-server.</t>
            <t>Removed unused 'external-client-auth-supported' feature.</t>
            <t>Added features client-auth-password, client-auth-hostbased, and client-auth-none.</t>
            <t>Renamed 'host-key' to 'public-key' for when refering to 'publickey' based auth.</t>
            <t>Added new feature-protected 'hostbased' and 'none' to the 'user' node's config.</t>
            <t>Added new feature-protected 'hostbased' and 'none' to the 'client-identity' node's config.</t>
            <t>Updated examples to reflect new "bag" addition to truststore.</t>
            <t>Refined truststore/keystore groupings to ensure the key formats "must" be particular values.</t>
            <t>Switched to using truststore's new "public-key" bag (instead of separate "ssh-public-key"
              and "raw-public-key" bags.</t>
            <t>Updated client/server examples to cover ALL cases (local/ref x cert/raw-key/psk).</t>
          </list>
        </t>
      </section>
      <section title="18 to 19">
        <t>
          <list style="symbols">
            <t>Updated the "keepalives" containers to address Michal Vaško's request to
              align with RFC 8071.</t>
            <t>Removed algorithm-mapping tables from the "SSH Common Model" section</t>
            <t>Removed 'algorithm' node from examples.</t>
            <t>Added feature "userauth-publickey"</t>
            <t>Removed "choice auth-type", as auth-types are not exclusive.</t>
            <t>Renamed both "client-certs" and "server-certs" to "ee-certs"</t>
            <t>Switch "must" to assert the public-key-format is "subject-public-key-info-format" when certificates are used.</t>
            <t>Added a "Note to Reviewers" note to first page.</t>
          </list>
        </t>
      </section>
      <section title="19 to 20">
        <t>
          <list style="symbols">
            <t>Added a "must 'public-key or password or hostbased or none or certificate'"
              statement to the "user" node in ietf-ssh-client</t>
            <t>Expanded "Data Model Overview section(s) [remove "wall" of tree diagrams].</t>
            <t>Moved the "ietf-ssh-common" module section to proceed the other two module sections.</t>
            <t>Updated the Security Considerations section.</t>
          </list>
        </t>
      </section>
      <section title="20 to 21">
        <t>
          <list style="symbols">
            <t>Updated examples to reflect new "cleartext-" prefix in the crypto-types draft.</t>
          </list>
        </t>
      </section>
      <section title="21 to 22">
        <t>
          <list style="symbols">
            <t>Cleaned up the SSH-client examples (i.e., removing FIXMEs)</t>
            <t>Fixed issues found by the SecDir review of the "keystore" draft.</t>
            <t>Updated the "ietf-ssh-client" module to use the new "password-grouping"
              grouping from the "crypto-types" module.</t>
          </list>
        </t>
      </section>
      <section title="22 to 23">
        <t>
          <list style="symbols">
            <t>Addressed comments raised by YANG Doctor in the ct/ts/ks drafts.</t>
          </list>
        </t>
      </section>
      <section title="23 to 24">
        <t>
          <list style="symbols">
            <t>Removed the 'supported-authentication-methods' from {grouping ssh-server-grouping}/client-authentication.</t>
            <t>Added XML-comment above examples explaining the reason for the unexepected top-most element's presence.</t>
            <t>Added RFC-references to various 'feature' statements.</t>
            <t>Renamed "credentials" to "authentication methods"</t>
            <t>Renamed "client-auth-*" to "userauth-*"</t>
            <t>Renamed "client-identity-*" to "userauth-*"</t>
            <t>Fixed nits found by YANG Doctor reviews.</t>
            <t>Aligned modules with `pyang -f` formatting.</t>
            <t>Added a 'Contributors' section.</t>
          </list>
        </t>
      </section>
      <section title="24 to 25">
        <t>
          <list style="symbols">
            <t>Moved algorithms in ietf-ssh-common (plus more) to IANA-maintained modules</t>
            <t>Added "config false" lists for algorithms supported by the server.</t>
            <t>Renamed "{ietf-ssh-client}userauth-*" to "client-ident-*"</t>
            <t>Renamed "{ietf-ssh-server}userauth-*" to "local-user-auth-*"</t>
            <t>Fixed issues found during YANG Doctor review.</t>
            <t>Fixed issues found during Secdir review.</t>
          </list>
        </t>
      </section>
      <section title="25 to 26">
        <t>
          <list style="symbols">
            <t>Replaced "base64encodedvalue==" with "BASE64VALUE=" in examples.</t>
            <t>Minor editorial nits</t>
          </list>
        </t>
      </section>
      <section title="26 to 27">
        <t>
          <list style="symbols">
            <t>Fixed up the 'WG Web' and 'WG List' lines in YANG module(s)</t>
            <t>Fixed up copyright (i.e., s/Simplified/Revised/) in YANG module(s)</t>
            <t>Created identityref-based typedefs for each of the four IANA alg identity bases.</t>
            <t>Added ietf-ssh-common:generate-asymmetric-key-pair() RPC for discussion.</t>
          </list>
        </t>
      </section>
      <section title="27 to 28">
        <t>
          <list style="symbols">
            <t>Fixed example to not have line-returns around "identity" values.</t>
            <t>Fixed examples to not include "xmlns:algs".</t>
            <t>Added an example for the "generate-asymmetric-key-pair" RPC.</t>
          </list>
        </t>
      </section>
      <section title="28 to 29">
        <t>
          <list style="symbols">
            <t>Updated modules to IANA-maintained modules in Appendix A to 2022-06-16.</t>
          </list>
        </t>
      </section>
      <section title="29 to 30">
        <t>
          <list style="symbols">
            <t>Fixed 'must' expressions.</t>
            <t>Added missing 'revision' statement.</t>
          </list>
        </t>
      </section>
      <section title="30 to 31">
        <t>
          <list style="symbols">
            <t>Updated per Shepherd reviews impacting the suite of drafts.</t>
          </list>
        </t>
      </section>
      <section title="31 to 32">
        <t>
          <list style="symbols">
            <t>Updated per Shepherd reviews impacting the suite of drafts.</t>
          </list>
        </t>
      </section>
      <section title="32 to 33">
        <t>
          <list style="symbols">
            <t>Updated per Tom Petch review.</t>
            <t>Updated Intro to clarify what "generic" means.</t>
            <t>Added RPC-reply for 'generate-asymmetric-key-pair' example.</t>
            <t>Added references to RFC 4251 and FIPS 186-6.</t>
            <t>Added "if-feature ct:encrypted-private-keys" for "case cleartext".</t>
          </list>
        </t>
      </section>
      <section title="33 to 34">
        <t>
          <list style="symbols">
              <t>Addresses AD review comments.</t>
              <t>Added note to Editor to fix line foldings.</t>
              <t>Introduction now more clearly identifies the "ietf-" and "iana-" modules defined.</t>
              <t>Clarified that the modules, when implemented, do not define any protocol-accessible nodes.</t>
              <t>Clarified that IANA may deprecate and/or obsolete identities over time.</t>
              <t>Added Security Consideration for the "generate-asymmetric-key-pair" RPC.</t>
              <t>Added Security Considerations text to also look a SC-section from imported modules.</t>
              <t>Fixed private-key "must" expressions to not require public-key nodes to be present.</t>
              <t>Renamed leaf from "bits" to "num-bits".</t>
              <t>Renamed leaf from "hide" to "hidden".</t>
              <t>Added container "private-key-encoding" to wrap existing choice.</t>
              <t>Removed "public-key-format" and "public-key" nodes from examples.</t>
          </list>
        </t>
      </section>
      <section title="34 to 35">
        <t>  
          <list style="symbols">
            <t>Addresses AD review by Rob Wilton.</t>
          </list>
        </t>
      </section>
      <section title="35 to 36">
        <t>  
          <list style="symbols">
            <t>Addresses 1st-round of IESG reviews.</t>
          </list>
        </t> 
      </section>
      <section title="36 to 38">
        <t>  
          <list style="symbols">
            <t>Addresses issues found in OpsDir review of the ssh-client-server draft.</t>
            <t>Replaced identities with enums in the IANA modules.</t>
            <t>Updated per Elwyn Davies' Gen-ART review.</t>
            <t>Updated Introduction to read more like the Abstract</t>
            <t>Add refs to where the 'operational' and 'system' datastores are defined.</t>
            <t>Updated Editor-notes to NOT remove the script (just remove the initial IANA modules)</t>
            <t>Renamed Security Considerations section s/Template for/Considerations for/</t>
            <t>s/defines/presents/ in a few places.</t>
            <t>Renamed script from 'gen-identities.py' to 'gen-yang-modules.py'</t>
            <t>Removed the removeInRFC="true" attribute in Appendix sections</t>
          </list>
        </t> 
      </section>
      <section title="38 to 39">
        <t>  
          <list style="symbols">
            <t>Address IESG review comments.</t>
          </list>
        </t> 
      </section>
      <section title="39 to 40">
        <t>  
          <list style="symbols">
            <t>Updated to reflect comments from Paul Wouters.</t>
            <t>Fixed the "generate-asymmetric-key-pair" RPC to return the
              location to where hidden keys are created.</t>
          </list>
        </t> 
      </section>
    </section>

    <section title="Acknowledgements" numbered="no">
      <t>The authors would like to thank the following for lively discussions
        on list and in the halls (ordered by first name):
        Alan Luchuk,
        Andy Bierman,
        Balázs Kovács,
        Barry Leiba,
        Benoit Claise,
        Bert Wijnen,
        David Lamparter,
        Elwyn Davies,
        Gary Wu,
        Jürgen Schönwälder,
        Ladislav Lhotka,
        Liang Xia,
        Martin Björklund,
        Martin Thomson,
        Mehmet Ersue,
        Michal Vaško,
        Murray Kucherawy,
        Paul Wouters,
        Per Andersson,
        Phil Shafer,
        Qin Wun,
        Radek Krejci,
        Rob Wilton,
        Roman Danyliw,
        Russ Housley,
        Sean Turner,
        Tom Petch,
        Thomas Martin,
        and Warren Kumari.</t>
    </section>

    <section title="Contributors" numbered="no">
      <t>Special acknowledgement goes to Gary Wu for his work on the
        "ietf-ssh-common" module.</t>
    </section>
  </back>
</rfc>
