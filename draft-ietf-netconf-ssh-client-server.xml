<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->

<rfc xmlns:xi="http://www.w3.org/2001/XInclude"
     category="std"
     consensus="true"
     docName="draft-ietf-netconf-ssh-client-server-latest"
     ipr="trust200902">
  <front>
    <title abbrev="Groupings for SSH Clients and Servers">YANG Groupings for
      SSH Clients and SSH Servers</title>
    <author fullname="Kent Watsen" initials="K." surname="Watsen">
      <organization>Watsen Networks</organization>
      <address>
        <email>kent+ietf@watsen.net</email>
      </address>
    </author>
    <date/>
    <area>Operations</area>
    <workgroup>NETCONF Working Group</workgroup>
    <abstract>
      <t>This document defines three YANG 1.1
        modules: the first defines identities and groupings common to both SSH
        clients and SSH servers, the second defines a grouping for a generic
        SSH client, and the third defines a grouping for a generic SSH server.</t>
    </abstract>
    <note title="Editorial Note (To be removed by RFC Editor)">
      <t>This draft contains placeholder values that need to be replaced
        with finalized values at the time of publication. This note summarizes
        all of the substitutions that are needed. No other RFC Editor
        instructions are specified elsewhere in this document.</t>
      <t>Artwork in this document contains shorthand references to drafts in
        progress.  Please apply the following replacements:
        <list style="symbols">
          <t><spanx style="verb">AAAA</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-crypto-types</t>
          <t><spanx style="verb">BBBB</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-trust-anchors</t>
          <t><spanx style="verb">CCCC</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-keystore</t>
          <t><spanx style="verb">DDDD</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-tcp-client-server</t>
          <t><spanx style="verb">EEEE</spanx> --&gt; the assigned RFC value for this draft</t>
        </list>
      </t>
      <t>Artwork in this document contains placeholder values for the date of
        publication of this draft. Please apply the following replacement:
        <list style="symbols">
          <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication date of this draft</t>
        </list>
      </t>
      <t>The following Appendix section is to be removed prior to publication:
        <list style="symbols">
          <t><xref target="change-log"/>.  Change Log</t>
        </list>
      </t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document defines three YANG 1.1 <xref target="RFC7950"/>
        modules: the first defines identities and groupings common to both SSH
        clients and SSH servers, the second defines a grouping for a generic
        SSH client, and the third defines a grouping for a generic SSH server.
        It is intended that these groupings will be used by applications
        using the SSH protocol <xref target="RFC4252"/>, <xref
        target="RFC4253"/>, and <xref target="RFC4254"/>. For instance, these
        groupings could be used to help define the data model for an OpenSSH
        <xref target="OPENSSH"/> server or a NETCONF over SSH <xref
        target="RFC6242"/> based server.</t>

      <t>The client and server YANG modules in this document each define one
      grouping, which is focused on just SSH-specific configuration, and
      specifically avoids any transport-level configuration, such as what
      ports to listen on or connect to. This affords applications the
      opportunity to define their own strategy for how the underlying TCP
      connection is established. For instance, applications supporting NETCONF
      Call Home <xref target="RFC8071"/> could use the "ssh-server-grouping"
      grouping for the SSH parts it provides, while adding data nodes for the
      TCP-level call-home configuration.</t>

      <t>The modules defined in this document use groupings defined in <xref
      target="I-D.ietf-netconf-keystore"/> <!-- and
        <xref target="I-D.kwatsen-netconf-trust-anchors"/> --> enabling keys
      <!-- and trust anchors, respectively,--> to be either locally defined or
      a reference to globally configured values.</t>

      <t>The modules defined in this document optionally support <xref
      target="RFC6187"/> enabling X.509v3 certificate based host keys and
      public keys.</t>

INSERT_TEXT_FROM_FILE(../common-intro-snippet.xml,150)

      <section title="Adherence to the NMDA">
        <t>This document is compliant with the Network Management Datastore
          Architecture (NMDA) <xref target="RFC8342"/>.  For instance, as
          described in <xref target="I-D.ietf-netconf-trust-anchors"/> and
          <xref target="I-D.ietf-netconf-keystore"/>, trust anchors and keys
          installed during manufacturing are expected to appear
          in &lt;operational&gt;.</t>
      </section>
    </section>

    <section anchor="ssh-common-model" title="The &quot;ietf-ssh-common&quot; Module">
      <t>The SSH common model presented in this section contains identities
      and groupings common to both SSH clients and SSH servers. The
      "transport-params-grouping" grouping can be used to configure the list of SSH
      transport algorithms permitted by the SSH client or SSH server. The
      lists of algorithms are ordered such that, if multiple algorithms are
      permitted by the client, the algorithm that appears first in its list
      that is also permitted by the server is used for the SSH transport layer
      connection. The ability to restrict the algorithms allowed is
      provided in this grouping for SSH clients and SSH servers that are
      capable of doing so and may serve to make SSH clients and SSH servers
      compliant with security policies.</t>

      <t>Features are defined for algorithms that are OPTIONAL or are not
      widely supported by popular implementations. Note that the list of
      algorithms is not exhaustive. As well, some algorithms that are REQUIRED
      by <xref target="RFC4253"/> are missing, notably "ssh-dss" and
      "diffie-hellman-group1-sha1" due to their weak security and there being
      alternatives that are widely supported.</t>

    <section title="Data Model Overview">

        <t>This section provides an overview of the "ietf-ssh-common" module
          in terms of its features, identities, and groupings.</t>

        <section title="Features" anchor="common-features" toc="exclude">
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-ssh-common" module:</t>
          <t>
            <figure>
              <artwork><![CDATA[
Features:
  +-- ssh-ecc
  +-- ssh-x509-certs
  +-- ssh-dh-group-exchange
  +-- ssh-ctr
  +-- ssh-sha2
]]></artwork>
            </figure>
          </t>
          <aside>
            <t>The diagram above uses syntax that is similar to but not
              defined in <xref target="RFC8340"/>.</t>
          </aside>
        </section>

        <section title="Identities" anchor="identities" toc="exclude">
          <t>The following diagram illustrates the relationship amongst the
            "identity" statements defined in the "ietf-ssh-common" module:</t>
          <t>
            <figure>
             <artwork><![CDATA[
Identities:               
  +-- public-key-alg-base
  |  +-- ssh-dss
  |  +-- ssh-rsa
  |  +-- ecdsa-sha2-nistp256
  |  +-- ecdsa-sha2-nistp384
  |  +-- ecdsa-sha2-nistp521
  |  +-- x509v3-ssh-rsa
  |  +-- x509v3-rsa2048-sha256
  |  +-- x509v3-ecdsa-sha2-nistp256
  |  +-- x509v3-ecdsa-sha2-nistp384
  |  +-- x509v3-ecdsa-sha2-nistp521
  +-- key-exchange-alg-base
  |  +-- diffie-hellman-group14-sha1
  |  +-- diffie-hellman-group-exchange-sha1
  |  +-- diffie-hellman-group-exchange-sha256
  |  +-- ecdh-sha2-nistp256
  |  +-- ecdh-sha2-nistp384
  |  +-- ecdh-sha2-nistp521
  +-- encryption-alg-base
  |  +-- triple-des-cbc
  |  +-- aes128-cbc
  |  +-- aes192-cbc
  |  +-- aes256-cbc
  |  +-- aes128-ctr
  |  +-- aes192-ctr
  |  +-- aes256-ctr
  +-- mac-alg-base
     +-- hmac-sha1
     +-- hmac-sha2-256
     +-- hmac-sha2-512
]]></artwork>
            </figure>
          </t>
          <aside>
            <t>The diagram above uses syntax that is similar to but not
              defined in <xref target="RFC8340"/>.</t>
          </aside>
          <t>Comments:</t>
          <ul spacing="compact">
            <li>The diagram shows that there are four base identities.</li>
            <li>These identities are used by this module to define algorithms for
              public-key, key-exchange, encryption, and MACs.</li>
            <li>These base identities are "abstract", in the object orientied
              programming sense, in that they only define a "class" of algorithms, 
              rather than a specific algorithm.</li>
          </ul>
        </section>
          
        <section title="Groupings" toc="exclude">
          <t>The "ietf-ssh-common" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>transport-params-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>

          <section title="The &quot;transport-params-grouping&quot; Grouping" anchor="transport-params-grouping">
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "transport-params-grouping" grouping:</t>
            <t>
              <figure>
               <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/tree-transport-params-grouping.no-expand.txt)
]]></artwork>
              </figure>
            </t>
            <t>Comments:</t>
            <ul>
              <li>This grouping is used by both the "ssh-client-grouping" and the
                "ssh-server-grouping" groupings defined in <xref target="ssh-client-grouping"/>
                and <xref target="ssh-server-grouping"/>, respectively.</li>
              <li>This grouping enables client and server configurations to
                specify the algorithms that are to be used when establishing
                SSH sessions.</li>
              <li>Each list is "ordered-by user".</li>
            </ul>
          </section>
        </section>

        <section title="Protocol-accessible Nodes" toc="exclude">
          <t>The "ietf-ssh-common" module defines only "grouping" statements that are
            used by other modules to instantiate protocol-accessible nodes.</t>
        </section>

      </section>

      <section title="Example Usage">
        <t>This following example illustrates how the
        "transport-params-grouping' grouping appears when populated with some data.</t>

        <t><figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-common.xml)
]]></artwork>
          </figure></t>
      </section>

      <section anchor="ssh-common-yang-module" title="YANG Module">
        <t>This YANG module has normative references to <xref
        target="RFC4253"/>, <xref target="RFC4344"/>, <xref
        target="RFC4419"/>, <xref target="RFC5656"/>, <xref
        target="RFC6187"/>, and <xref target="RFC6668"/>.</t>


        <t>
          <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-ssh-common@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-ssh-common@YYYY-MM-DD.yang)
]]></artwork>
            <postamble>&lt;CODE ENDS&gt;</postamble>
          </figure>
        </t>
      </section>
    </section>

    <section anchor="ssh-client-model" title="The &quot;ietf-ssh-client&quot; Module">

      <t>This section defines a YANG 1.1 <xref target="RFC7950"/> module called
        "ietf-ssh-client".  A high-level overview of the module is provided in
        <xref target="client-overview"/>. Examples illustrating the module's use
        are provided in <xref target="client-examples">Examples</xref>. The YANG
        module itself is defined in <xref target="client-yang-module"/>.</t>

      <section title="Data Model Overview" anchor="client-overview">

        <t>This section provides an overview of the "ietf-ssh-client" module
          in terms of its features and groupings.</t>

        <section title="Features" anchor="client-features" toc="exclude">
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-ssh-client" module:</t>
          <t>
            <figure>
              <artwork><![CDATA[
Features:
  +-- ssh-client-transport-params-config
  +-- ssh-client-keepalives
  +-- client-identity-password
  +-- client-identity-publickey
  +-- client-identity-hostbased
  +-- client-identity-none
]]></artwork>
            </figure>
          </t>
          <aside>
            <t>The diagram above uses syntax that is similar to but not
              defined in <xref target="RFC8340"/>.</t>
          </aside>
        </section>

        <section title="Groupings" toc="exclude">
          <t>The "ietf-ssh-client" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>ssh-client-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>

          <section title="The &quot;ssh-client-grouping&quot; Grouping" anchor="ssh-client-grouping">
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "ssh-client-grouping" grouping:</t>
            <t>
              <figure>
               <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/tree-ssh-client-grouping.no-expand.txt)
]]></artwork>
              </figure>
            </t>
            <t>Comments:</t>
            <ul>
              <li>The "client-identity" node configures a "username" and credentials,
                each enabled by a "feature" statement defined in <xref target="client-features"/>.</li>
              <li>The "server-authentication" node configures trust anchors for
                authenticating the SSH server, with each option enabled by a "feature" statement.</li>
              <li>The "transport-params" node, which must be enabled by a feature, configures
                parameters for the SSH sessions established by this configuration.</li>
              <li>The "keepalives" node, which must be enabled by a feature, configures
                a "presence" container for testing the aliveness of the SSH server.  The
                aliveness-test occurs at the SSH protocol layer.</li>
              <li>For the referenced grouping statement(s):
                <ul spacing="compact">
                  <li>The "local-or-keystore-asymmetric-key-grouping" grouping is
                    discussed in <relref section="2.1.3.4" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "local-or-keystore-end-entity-cert-with-key-grouping" grouping is
                    discussed in <relref section="2.1.3.6" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "local-or-truststore-public-keys-grouping" grouping is
                    discussed in <relref section="2.1.3.2" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "local-or-truststore-certs-grouping" grouping is
                    discussed in <relref section="2.1.3.1" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "transport-params-grouping" grouping is discussed in
                  <xref target="transport-params-grouping"/> in this document.</li>
                </ul>
              </li>
            </ul>
          </section>
        </section>

        <section title="Protocol-accessible Nodes" toc="exclude">
          <t>The "ietf-ssh-client" module defines only "grouping" statements that are
            used by other modules to instantiate protocol-accessible nodes.</t>
        </section>

      </section>

      <section title="Example Usage" anchor="client-examples">
        <t>This section presents two examples showing the "ssh-client-grouping"
        grouping populated with some data. These examples are effectively the same
        except the first configures the client identity using a local key
        while the second uses a key configured in a keystore. Both examples
        are consistent with the examples presented in Section 2 of <xref
        target="I-D.ietf-netconf-trust-anchors"/> and Section 3.2 of <xref
        target="I-D.ietf-netconf-keystore"/>.</t>

        <t>The following configuration example uses local-definitions for the
          client identity and server authentication:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-client-local.xml)
]]></artwork>
          </figure>
        </t>

        <t>The following configuration example uses keystore-references for the
          client identity and truststore-references for server authentication:
          from the keystore:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-client-keystore.xml)
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="client-yang-module" title="YANG Module">
        <t>This YANG module has normative references to <xref
        target="I-D.ietf-netconf-trust-anchors"/>, and <xref
        target="I-D.ietf-netconf-keystore"/>.</t>

        <t>
          <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-ssh-client@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-ssh-client@YYYY-MM-DD.yang)
]]></artwork>
            <postamble>&lt;CODE ENDS&gt;</postamble>
          </figure>
        </t>
      </section>
    </section>

    <section anchor="ssh-server-model" title="The &quot;ietf-ssh-server&quot; Module">

      <t>This section defines a YANG 1.1 module called
        "ietf-ssh-server".  A high-level overview of the module is provided in
        <xref target="server-overview"/>. Examples illustrating the module's use
        are provided in <xref target="server-examples">Examples</xref>. The YANG
        module itself is defined in <xref target="server-yang-module"/>.</t>

      <section title="Data Model Overview" anchor="server-overview">

        <t>This section provides an overview of the "ietf-ssh-server" module
          in terms of its features and groupings.</t>

        <section title="Features" anchor="server-features" toc="exclude">
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-ssh-server" module:</t>
          <t>
            <figure>
              <artwork><![CDATA[
Features:
  +-- ssh-server-transport-params-config
  +-- ssh-server-keepalives
  +-- client-auth-config-supported
  +-- client-auth-publickey
  +-- client-auth-password
  +-- client-auth-hostbased
  +-- client-auth-none
]]></artwork>
            </figure>
          </t>
          <aside>
            <t>The diagram above uses syntax that is similar to but not
              defined in <xref target="RFC8340"/>.</t>
          </aside>
        </section>

        <section title="Groupings" toc="exclude">
          <t>The "ietf-ssh-server" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>ssh-server-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>

          <section title="The &quot;ssh-server-grouping&quot; Grouping" anchor="ssh-server-grouping">
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "ssh-server-grouping" grouping:</t>
            <t>
              <figure>
               <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/tree-ssh-server-grouping.no-expand.txt)
]]></artwork>
              </figure>
            </t>
            <t>Comments:</t>
            <ul>
              <li>The "server-identity" node configures identity credentials.  The
                ability to use a certificate is enabled by a "feature".</li>
              <li>The "client-authentication" node configures trust anchors for
                authenticating the SSH client, with each option enabled by a "feature" statement.</li>
              <li>The "transport-params" node, which must be enabled by a feature, configures
                parameters for the SSH sessions established by this configuration.</li>
              <li>The "keepalives" node, which must be enabled by a feature, configures
                a "presence" container for testing the aliveness of the SSH client.  The
                aliveness-test occurs at the SSH protocol layer.</li>
              <li>For the referenced grouping statement(s):
                <ul spacing="compact">
                  <li>The "local-or-keystore-asymmetric-key-grouping" grouping is
                    discussed in <relref section="2.1.3.4" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "local-or-keystore-end-entity-cert-with-key-grouping" grouping is
                    discussed in <relref section="2.1.3.6" target="I-D.ietf-netconf-keystore"/>.</li>
                  <li>The "local-or-truststore-public-keys-grouping" grouping is
                    discussed in <relref section="2.1.3.2" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "local-or-truststore-certs-grouping" grouping is
                    discussed in <relref section="2.1.3.1" target="I-D.ietf-netconf-trust-anchors"/>.</li>
                  <li>The "transport-params-grouping" grouping is discussed in
                  <xref target="transport-params-grouping"/> in this document.</li>
                </ul>
              </li>
            </ul>
          </section>
        </section>

        <section title="Protocol-accessible Nodes" toc="exclude">
          <t>The "ietf-ssh-server" module defines only "grouping" statements that are
            used by other modules to instantiate protocol-accessible nodes.</t>
        </section>

      </section>

      <section title="Example Usage" anchor="server-examples">
        <t>This section presents two examples showing the "ssh-server-grouping"
        grouping populated with some data. These examples are effectively the same
        except the first configures the server identity using a local key
        while the second uses a key configured in a keystore. Both examples
        are consistent with the examples presented in Section 2 of <xref
        target="I-D.ietf-netconf-trust-anchors"/> and Section 3.2 of <xref
        target="I-D.ietf-netconf-keystore"/>.</t>

        <t>The following configuration example uses local-definitions for the
          server identity and client authentication:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-server-local.xml)
]]></artwork>
          </figure>
        </t>

        <t>The following configuration example uses keystore-references for the
          server identity and truststore-references for client authentication:
          from the keystore:
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-ssh-server-keystore.xml)
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="server-yang-module" title="YANG Module">
        <t>This YANG module has normative references to <xref
        target="I-D.ietf-netconf-trust-anchors"/> and <xref
        target="I-D.ietf-netconf-keystore"/> and informative references to
        <xref target="RFC4253"/> and <xref target="RFC7317"/>.</t>

        <t>
          <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-ssh-server@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-ssh-server@YYYY-MM-DD.yang)
]]></artwork>
            <postamble>&lt;CODE ENDS&gt;</postamble>
          </figure>
        </t>
      </section>
    </section>

    <section title="Security Considerations">

      <section title="The &quot;ietf-ssh-common&quot; YANG Module">
        <t>The "ietf-ssh-common" YANG module defines "grouping" statements
          that are designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>

        <t>The NETCONF access control model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>

        <t>Since the module in this document only define groupings,
          these considerations are primarily for the designers of other
          modules that use these groupings.</t>

        <t>None of the readable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-all" extension has not been set for
          any data nodes defined in this module.</t>

        <t>None of the writable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-write" extension has not been set for
          any data nodes defined in this module.</t>

        <t>This module does not define any RPCs, actions, or notifications,
          and thus the security consideration for such is not provided here.</t>
      </section>

      <section title="The &quot;ietf-ssh-client&quot; YANG Module">
        <t>The "ietf-ssh-client" YANG module defines "grouping" statements
          that are designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>

        <t>The NETCONF access control model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>

        <t>Since the module in this document only define groupings,
          these considerations are primarily for the designers of other
          modules that use these groupings.</t>

        <t>One readable data node defined in this YANG module may be considered
          sensitive or vulnerable in some network environments. This
          node is as follows:
          <list style="symbols">
            <t>The "client-identity/password" node:
              <ul empty="true">
                <li>The cleartext "password" node defined in the "ssh-client-grouping"
                  grouping is additionally sensitive to read operations such that,
                  in normal use cases, it should never be returned to a client.
                  For this reason, the NACM extension "default-deny-all" has been
                  applied to it.</li>
              </ul>
            </t>
          </list>
        </t>
        <aside>
          <t>Please be aware that this module uses the "key" and "private-key"
            nodes from the "ietf-crypto-types" module <xref target="I-D.ietf-netconf-crypto-types"/>,
            where said nodes have the NACM extension "default-deny-all" set, thus
            preventing unrestricted read-access to the cleartext key values.</t>
        </aside>

        <t>All of the writable data nodes defined by this module may be
          considered sensitive or vulnerable in some network environments.
          For instance, any modification to a key or reference to a key
          may dramatically alter the implemented security policy.  For
          this reason, the NACM extension "default-deny-write" has been
          set for all data nodes defined in this module.</t>

        <t>This module does not define any RPCs, actions, or notifications,
          and thus the security consideration for such is not provided here.</t>
      </section>

      <section title="The &quot;ietf-ssh-server&quot; YANG Module">
        <t>The "ietf-ssh-server" YANG module defines "grouping" statements
          that are designed to be accessed via YANG based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS)
          with mutual authentication.</t>

        <t>The NETCONF access control model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and
          content.</t>

        <t>Since the module in this document only define groupings,
          these considerations are primarily for the designers of other
          modules that use these groupings.</t>

        <t>None of the readable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-all" extension has not been set for
          any data nodes defined in this module.</t>
        <aside>
          <t>Please be aware that this module uses the "key" and "private-key"
            nodes from the "ietf-crypto-types" module <xref target="I-D.ietf-netconf-crypto-types"/>,
            where said nodes have the NACM extension "default-deny-all" set, thus
            preventing unrestricted read-access to the cleartext key values.</t>
        </aside>

        <t>All of the writable data nodes defined by this module may be
          considered sensitive or vulnerable in some network environments.
          For instance, the addition or removal of references to keys,
          certificates, trusted anchors, etc., or even the modification
          of transport or keepalive parameters can dramatically alter
          the implemented security policy.  For this reason, the NACM
          extension "default-deny-write" has been set for all data nodes
          defined in this module.</t>

        <t>This module does not define any RPCs, actions, or notifications,
          and thus the security consideration for such is not provided here.</t>
      </section>
    </section>

    <section title="IANA Considerations">
      <section title='The "IETF XML" Registry'>
        <t>This document registers three URIs in the "ns" subregistry of the
        IETF XML Registry <xref target="RFC3688"/>. Following the format in
        <xref target="RFC3688"/>, the following registrations are
        requested:</t>

        <t><figure>
            <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-ssh-common
   Registrant Contact: The IESG
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-ssh-client
   Registrant Contact: The IESG
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-ssh-server
   Registrant Contact: The IESG
   XML: N/A, the requested URI is an XML namespace.
</artwork>
          </figure></t>
      </section>

      <section title='The "YANG Module Names" Registry'>
        <t>This document registers three YANG modules in the YANG Module Names
        registry <xref target="RFC6020"/>. Following the format in <xref
        target="RFC6020"/>, the following registrations are requested:</t>

        <t><figure>
            <artwork>
   name:         ietf-ssh-common
   namespace:    urn:ietf:params:xml:ns:yang:ietf-ssh-common
   prefix:       sshcmn
   reference:    RFC EEEE

   name:         ietf-ssh-client
   namespace:    urn:ietf:params:xml:ns:yang:ietf-ssh-client
   prefix:       sshc
   reference:    RFC EEEE

   name:         ietf-ssh-server
   namespace:    urn:ietf:params:xml:ns:yang:ietf-ssh-server
   prefix:       sshs
   reference:    RFC EEEE
</artwork>
          </figure></t>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.4344.xml"?>
      <?rfc include="reference.RFC.4419.xml"?>
      <?rfc include="reference.RFC.5656.xml"?>
      <?rfc include="reference.RFC.6020.xml"?>
      <?rfc include="reference.RFC.6187.xml"?>
      <?rfc include="reference.RFC.6668.xml"?>
      <?rfc include="reference.RFC.7950.xml"?>
      <?rfc include="reference.RFC.8174.xml"?>
      <?rfc include="reference.RFC.8341.xml"?>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-crypto-types.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-trust-anchors.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-keystore.xml"/>
    </references>

    <references title="Informative References">
      <!--<reference anchor='FIPS180-4' target="http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf">
          <front>
            <title>Secure Hash Standard (SHS)</title>
            <author fullname='National Institute of Standards and Technology'/>
            <date year='2012' month='March'/>
          </front>
          <seriesInfo name="FIPS PUB" value="180-4"/>
        </reference>-->
      <?rfc include="reference.RFC.3688.xml"?>
      <?rfc include="reference.RFC.4252.xml"?>
      <?rfc include="reference.RFC.4253.xml"?>
      <?rfc include="reference.RFC.4254.xml"?>
      <?rfc include="reference.RFC.6241.xml"?>
      <?rfc include="reference.RFC.6242.xml"?>
      <?rfc include="reference.RFC.7317.xml"?>
      <?rfc include="reference.RFC.8040.xml"?>
      <?rfc include="reference.RFC.8071.xml"?>
      <?rfc include="reference.RFC.8340.xml"?>
      <?rfc include="reference.RFC.8342.xml"?>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-tcp-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-ssh-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-tls-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-http-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-netconf-client-server.xml"/>
      <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-netconf-restconf-client-server.xml"/>
      <reference anchor="OPENSSH" target="http://www.openssh.com">
        <front>
          <title>OpenSSH</title>
          <author fullname="The OpenBSD Project"/>
          <date year="2016"/>
        </front>
      </reference>
    </references>

    <section title="Change Log" removeInRFC="true" anchor="change-log">
      <section title="00 to 01">
        <t>
          <list style="symbols">
            <t>Noted that '0.0.0.0' and '::' might have special meanings.</t>
            <t>Renamed "keychain" to "keystore".</t>
          </list>
        </t>
      </section>
      <section title="01 to 02">
        <t>
          <list style="symbols">
            <t>Removed the groupings 'listening-ssh-client-grouping' and
            'listening-ssh-server-grouping'. Now modules only contain the
            transport-independent groupings.</t>
            <t>Simplified the "client-auth" part in the ietf-ssh-client
            module. It now inlines what it used to point to keystore for.</t>
            <t>Added cipher suites for various algorithms into new
            'ietf-ssh-common' module.</t>
          </list>
        </t>
      </section>
      <section title="02 to 03">
        <t>
          <list style="symbols">
            <t>Removed 'RESTRICTED' enum from 'password' leaf type.</t>
            <t>Added a 'must' statement to container 'server-auth' asserting
            that at least one of the various auth mechanisms must be
            specified.</t>
            <t>Fixed description statement for leaf 'trusted-ca-certs'.</t>
          </list>
        </t>
      </section>
      <section title="03 to 04">
        <t>
          <list style="symbols">
            <t>Change title to "YANG Groupings for SSH Clients and SSH
            Servers"</t>
            <t>Added reference to RFC 6668</t>
            <t>Added RFC 8174 to Requirements Language Section.</t>
            <t>Enhanced description statement for ietf-ssh-server's
            "trusted-ca-certs" leaf.</t>
            <t>Added mandatory true to ietf-ssh-client's "client-auth"
            'choice' statement.</t>
            <t>Changed the YANG prefix for module ietf-ssh-common from
            'sshcom' to 'sshcmn'.</t>
            <t>Removed the compression algorithms as they are not commonly
            configurable in vendors' implementations.</t>
            <t>Updating descriptions in transport-params-grouping and the
            servers's usage of it.</t>
            <t>Now tree diagrams reference ietf-netmod-yang-tree-diagrams</t>
            <t>Updated YANG to use typedefs around leafrefs to common keystore
            paths</t>
            <t>Now inlines key and certificates (no longer a leafref to
            keystore)</t>
          </list>
        </t>
      </section>
      <section title="04 to 05">
        <t>
          <list style="symbols">
            <t>Merged changes from co-author.</t>
          </list>
        </t>
      </section>
      <section title="05 to 06">
        <t>
          <list style="symbols">
            <t>Updated to use trust anchors from trust-anchors draft (was
            keystore draft)</t>
            <t>Now uses new keystore grouping enabling asymmetric key to be
            either locally defined or a reference to the keystore.</t>
          </list>
        </t>
      </section>
      <section title="06 to 07">
        <t>
          <list style="symbols">
            <t>factored the ssh-[client|server]-groupings into more reusable
            groupings.</t>
            <t>added if-feature statements for the new "ssh-host-keys" and
            "x509-certificates" features defined in
            draft-ietf-netconf-trust-anchors.</t>
          </list>
        </t>
      </section>
      <section title="07 to 08">
        <t>
          <list style="symbols">
            <t>Added a number of compatibility matrices to Section 5 (thanks Frank!)</t>
            <t>Clarified that any configured "host-key-alg" values need to be 
               compatible with the configured private key.</t>
          </list>
        </t>
      </section>
      <section title="08 to 09">
        <t>
          <list style="symbols">
            <t>Updated examples to reflect update to groupings defined in the keystore -09 draft.</t>
            <t>Add SSH keepalives features and groupings.</t>
            <t>Prefixed top-level SSH grouping nodes with 'ssh-' and support mashups.</t>
            <t>Updated copyright date, boilerplate template, affiliation, and folding algorithm.</t>
          </list>
        </t>
      </section>
      <section title="09 to 10">
        <t>
          <list style="symbols">
            <t>Reformatted the YANG modules.</t>
          </list>
        </t>
      </section>
      <section title="10 to 11">
        <t>
          <list style="symbols">
            <t>Reformatted lines causing folding to occur.</t>
          </list>
        </t>
      </section>
      <section title="11 to 12">
        <t>
          <list style="symbols">
            <t>Collapsed all the inner groupings into the top-level grouping.</t>
            <t>Added a top-level "demux container" inside the top-level grouping.</t>
            <t>Added NACM statements and updated the Security Considerations section.</t>
            <t>Added "presence" statements on the "keepalive" containers, as was
              needed to address a validation error that appeared after adding the
              "must" statements into the NETCONF/RESTCONF client/server modules.</t>
            <t>Updated the boilerplate text in module-level "description" statement
              to match copyeditor convention.</t>
          </list>
        </t>
      </section>
      <section title="12 to 13">
        <t>
          <list style="symbols">
            <t>Removed the "demux containers", floating the
              nacm:default-deny-write to each descendent node, and
              adding a note to model designers regarding the potential
              need to add their own demux containers.</t>
            <t>Fixed a couple references (section 2 --> section 3)</t>
            <t>In the server model, replaced &lt;client-cert-auth&gt;
              with &lt;client-authentication&gt; and introduced 
              'local-or-external' choice.</t>
          </list>
        </t>
      </section>
      <section title="13 to 14">
        <t>
          <list style="symbols">
            <t>Updated to reflect changes in trust-anchors drafts
              (e.g., s/trust-anchors/truststore/g + s/pinned.//)</t>
          </list>
        </t>
      </section>
      <section title="14 to 15">
        <t>
          <list style="symbols">
            <t>Updated examples to reflect ietf-crypto-types change
              (e.g., identities --&gt; enumerations)</t>
            <t>Updated "server-authentication" and "client-authentication" nodes from
              being a leaf of type "ts:host-keys-ref" or "ts:certificates-ref" to a
              container that uses "ts:local-or-truststore-host-keys-grouping" or 
              "ts:local-or-truststore-certs-grouping".</t>
          </list>
        </t>
      </section>
      <section title="15 to 16">
        <t>
          <list style="symbols">
            <t>Removed unnecessary if-feature statements in the -client and -server modules.</t>
            <t>Cleaned up some description statements in the -client and -server modules.</t>
            <t>Fixed a canonical ordering issue in ietf-ssh-common detected by new pyang.</t>
          </list>
        </t>
      </section>
      <section title="16 to 17">
        <t>
          <list style="symbols">
            <t>Removed choice local-or-external by removing the 'external' case and flattening
              the 'local' case and adding a "client-auth-config-supported" feature.</t>
            <t>Updated examples to include the "*-key-format" nodes.</t>
            <t>Augmented-in "must" expressions ensuring that locally-defined public-key-format
              are "ct:ssh-public-key-format" (must expr for ref'ed keys are TBD).</t>
          </list>
        </t>
      </section>
      <section title="17 to 18">
        <t>
          <list style="symbols">
            <t>Removed leaf-list 'other' from ietf-ssh-server.</t>
            <t>Removed unused 'external-client-auth-supported' feature.</t>
            <t>Added features client-auth-password, client-auth-hostbased, and client-auth-none.</t>
            <t>Renamed 'host-key' to 'public-key' for when refering to 'publickey' based auth.</t>
            <t>Added new feature-protected 'hostbased' and 'none' to the 'user' node's config.</t>
            <t>Added new feature-protected 'hostbased' and 'none' to the 'client-identity' node's config.</t>
            <t>Updated examples to reflect new "bag" addition to truststore.</t>
            <t>Refined truststore/keystore groupings to ensure the key formats "must" be particular values.</t>
            <t>Switched to using truststore's new "public-key" bag (instead of separate "ssh-public-key"
              and "raw-public-key" bags.</t>
            <t>Updated client/server examples to cover ALL cases (local/ref x cert/raw-key/psk).</t>
          </list>
        </t>
      </section>
      <section title="18 to 19">
        <t>
          <list style="symbols">
            <t>Updated the "keepalives" containers to address Michal Vasko's request to
              align with RFC 8071.</t>
            <t>Removed algorithm-mapping tables from the "SSH Common Model" section</t>
            <t>Removed 'algorithm' node from examples.</t>
            <t>Added feature "client-identity-publickey"</t>
            <t>Removed "choice auth-type", as auth-types aren't exclusive.</t>
            <t>Renamed both "client-certs" and "server-certs" to "ee-certs"</t>
            <t>Switch "must" to assert the public-key-format is "subject-public-key-info-format" when certificates are used.</t>
            <t>Added a "Note to Reviewers" note to first page.</t>
          </list>
        </t>
      </section>
      <section title="19 to 20">
        <t>
          <list style="symbols">
            <t>Added a "must 'public-key or password or hostbased or none or certificate'"
              statement to the "user" node in ietf-ssh-client</t>
            <t>Expanded "Data Model Overview section(s) [remove "wall" of tree diagrams].</t>
            <t>Moved the "ietf-ssh-common" module section to proceed the other two module sections.</t>
            <t>Updated the Security Considerations section.</t>
          </list>
        </t>
      </section>
      <section title="20 to 21">
        <t>
          <list style="symbols">
            <t>Updated examples to reflect new "cleartext-" prefix in the crypto-types draft.</t>
          </list>
        </t>
      </section>
      <section title="21 to 22">
        <t>
          <list style="symbols">
            <t>Cleaned up the SSH-client examples (i.e., removing FIXMEs)</t>
            <t>Fixed issues found by the SecDir review of the "keystore" draft.</t>
            <t>Updated the "ietf-ssh-client" module to use the new "password-grouping"
              grouping from the "crypto-types" module.</t>
          </list>
        </t>
      </section>
      <section title="22 to 23">
        <t>
          <list style="symbols">
            <t>Addressed comments raised by YANG Doctor in the ct/ts/ks drafts.</t>
          </list>
        </t>
      </section>
      <section title="23 to 24">
        <t>
          <list style="symbols">
            <t>Added RFC-references to various 'feature' statements.</t>
            <t>Added 'keyboard-interactive' auth mechanism from RFC 4256.</t>
            <t>Added the 'gssapi-with-mic' and 'gssapi-keyex' auth mechanisms from RFC 4462.</t>
            <t>Added XML-comment above examples explaining the reason for the unusual top-most element's presence.</t>
            <t>Fixed nits found by YANG Doctor reviews.</t>
            <t>Added a 'Contributors' section.</t>
          </list>
        </t>
      </section>
      <!--
      <section title="24 to 25">
        <t>
          <list style="symbols">
            <t>SUBMISSION PENDING</t>
          </list>
        </t>
      </section>
      -->
    </section>

    <section title="Acknowledgements" numbered="no">
      <t>The authors would like to thank for following for lively discussions
        on list and in the halls (ordered by first name):
        Alan Luchuk,
        Andy Bierman,
        Balázs Kovács,
        Benoit Claise,
        Bert Wijnen,
        David Lamparter,
        Gary Wu,
        Juergen Schoenwaelder,
        Ladislav Lhotka,
        Liang Xia,
        Martin Bjorklund,
        Mehmet Ersue,
        Michal Vaško,
        Phil Shafer,
        Radek Krejci,
        Sean Turner,
        Tom Petch.</t>
    </section>

    <section title="Contributors" numbered="no">
      <t>Special acknowledgement goes to Gary Wu for his work on the
        "ietf-ssh-common" module.</t>
    </section>
  </back>
</rfc>
